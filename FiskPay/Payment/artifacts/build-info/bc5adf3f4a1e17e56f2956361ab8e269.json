{
	"id": "bc5adf3f4a1e17e56f2956361ab8e269",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Payment/Implementors.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.18;\r\n\r\ninterface ImplementorsInterface{\r\n\r\n    function GetAddress(string calldata name) external view returns(address);\r\n}\r\n\r\ncontract Implementors{\r\n\r\n    string constant public Name = \"Payment.Implementors\";\r\n\r\n    address constant private workspaceAddress = 0x7F6b1F900113A9b46E4F38395bFC28075324a9F4;\r\n    ImplementorsInterface constant private ws = ImplementorsInterface(workspaceAddress);\r\n\r\n//-----------------------------------------------------------------------//\r\n\r\n    struct Implementor{\r\n        uint32 epochSales;\r\n        uint32 epochEnd;\r\n        uint8 epochReward;\r\n    }\r\n\r\n    mapping(address => Implementor) internal implementor;\r\n\r\n//-----------------------------------------------------------------------//\r\n\r\n    function ImplementorReward(address _implementor) external returns(uint8){\r\n\r\n        if(ws.GetAddress(\"Payment.Proccessor\") != msg.sender)\r\n            return 0;\r\n\r\n        Implementor storage imp = implementor[_implementor];\r\n\r\n        if(imp.epochEnd < uint32(block.timestamp)){\r\n\r\n            uint32 epochSales = imp.epochSales;\r\n\r\n            if(epochSales > 24999)\r\n                imp.epochReward = 200;\r\n            else if(epochSales > 12499)\r\n                imp.epochReward = 150;\r\n            else if(epochSales > 7499)\r\n                imp.epochReward = 125;\r\n            else if(epochSales > 4999)\r\n                imp.epochReward = 100;\r\n            else if(epochSales > 2499)\r\n                imp.epochReward = 80;\r\n            else if(epochSales > 1499)\r\n                imp.epochReward = 60;\r\n            else if(epochSales > 999)\r\n                imp.epochReward = 50;\r\n            else if(epochSales > 499)\r\n                imp.epochReward = 40;\r\n            else if(epochSales > 249)\r\n                imp.epochReward = 35;\r\n            else\r\n                imp.epochReward = 30;\r\n\r\n            delete imp.epochSales;\r\n            imp.epochEnd = uint32(block.timestamp + 15 days);\r\n        }\r\n\r\n        imp.epochSales += 1;\r\n\r\n        return (imp.epochReward);\r\n    }\r\n\r\n//-----------------------------------------------------------------------//\r\n\r\n    function ImplementorProfile(address _implementor) external view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){\r\n\r\n        Implementor memory imp = implementor[_implementor];\r\n\r\n        epochSales = imp.epochSales;\r\n        epochEnd = imp.epochEnd;\r\n        epochReward = imp.epochReward;\r\n    }\r\n\r\n//-----------------------------------------------------------------------//\r\n\r\n    receive() external payable{\r\n\r\n        revert(); \r\n    }\r\n\r\n    fallback() external{\r\n        \r\n        revert();   \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 20000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Payment/Implementors.sol": {
				"Implementors": {
					"abi": [
						{
							"stateMutability": "nonpayable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementor",
									"type": "address"
								}
							],
							"name": "ImplementorProfile",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "epochSales",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "epochEnd",
									"type": "uint32"
								},
								{
									"internalType": "uint8",
									"name": "epochReward",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementor",
									"type": "address"
								}
							],
							"name": "ImplementorReward",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Payment/Implementors.sol\":181:2690  contract Implementors{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Payment/Implementors.sol\":181:2690  contract Implementors{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x09256eae\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8052474d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9b84b986\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"Payment/Implementors.sol\":2603:2611  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Payment/Implementors.sol\":181:2690  contract Implementors{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n        /* \"Payment/Implementors.sol\":2668:2676  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Payment/Implementors.sol\":2166:2477  function ImplementorProfile(address _implementor) external view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"Payment/Implementors.sol\":2330:2355  implementor[_implementor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Payment/Implementors.sol\":2238:2255  uint32 epochSales */\n      0x00\n        /* \"Payment/Implementors.sol\":2330:2355  implementor[_implementor] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Payment/Implementors.sol\":2305:2355  Implementor memory imp = implementor[_implementor] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      swap1\n      sload\n      0xffffffff\n      dup1\n      dup3\n      and\n      dup1\n      dup5\n      mstore\n      0x0100000000\n      dup4\n      div\n      swap1\n      swap2\n      and\n      swap4\n      dup4\n      add\n      dup5\n      swap1\n      mstore\n      0x010000000000000000\n      swap1\n      swap2\n      div\n      0xff\n      and\n      swap2\n      swap1\n      swap4\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n        /* \"Payment/Implementors.sol\":2166:2477  function ImplementorProfile(address _implementor) external view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){... */\n      jump\n    tag_12:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":629:639   */\n      0xffffffff\n        /* \"#utility.yul\":666:681   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":648:682   */\n      dup2\n      mstore\n        /* \"#utility.yul\":718:733   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":713:715   */\n      0x20\n        /* \"#utility.yul\":698:716   */\n      dup5\n      add\n        /* \"#utility.yul\":691:734   */\n      mstore\n        /* \"#utility.yul\":782:786   */\n      0xff\n        /* \"#utility.yul\":770:787   */\n      and\n        /* \"#utility.yul\":750:768   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":743:788   */\n      mstore\n        /* \"#utility.yul\":607:609   */\n      0x60\n        /* \"#utility.yul\":592:610   */\n      add\n        /* \"Payment/Implementors.sol\":2166:2477  function ImplementorProfile(address _implementor) external view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Payment/Implementors.sol\":211:263  string constant public Name = \"Payment.Implementors\" */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      0x5061796d656e742e496d706c656d656e746f7273000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n        /* \"Payment/Implementors.sol\":792:2079  function ImplementorReward(address _implementor) external returns(uint8){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1583:1587   */\n      0xff\n        /* \"#utility.yul\":1571:1588   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1553:1589   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1541:1543   */\n      0x20\n        /* \"#utility.yul\":1526:1544   */\n      add\n        /* \"Payment/Implementors.sol\":792:2079  function ImplementorReward(address _implementor) external returns(uint8){... */\n      tag_16\n        /* \"#utility.yul\":1411:1595   */\n      jump\n        /* \"Payment/Implementors.sol\":792:2079  function ImplementorReward(address _implementor) external returns(uint8){... */\n    tag_26:\n        /* \"Payment/Implementors.sol\":880:915  ws.GetAddress(\"Payment.Proccessor\") */\n      mload(0x40)\n      0x8b05f6de00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1802:1804   */\n      0x20\n        /* \"Payment/Implementors.sol\":880:915  ws.GetAddress(\"Payment.Proccessor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1784:1805   */\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x12\n        /* \"#utility.yul\":1821:1839   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1814:1844   */\n      mstore\n        /* \"#utility.yul\":1880:1900   */\n      0x5061796d656e742e50726f63636573736f720000000000000000000000000000\n        /* \"#utility.yul\":1860:1878   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1853:1901   */\n      mstore\n        /* \"Payment/Implementors.sol\":858:863  uint8 */\n      0x00\n      swap1\n        /* \"Payment/Implementors.sol\":919:929  msg.sender */\n      caller\n      swap1\n        /* \"Payment/Implementors.sol\":316:358  0x7F6b1F900113A9b46E4F38395bFC28075324a9F4 */\n      0x7f6b1f900113a9b46e4f38395bfc28075324a9f4\n      swap1\n        /* \"Payment/Implementors.sol\":880:893  ws.GetAddress */\n      0x8b05f6de\n      swap1\n        /* \"#utility.yul\":1918:1936   */\n      0x64\n      add\n        /* \"Payment/Implementors.sol\":880:915  ws.GetAddress(\"Payment.Proccessor\") */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"Payment/Implementors.sol\":880:929  ws.GetAddress(\"Payment.Proccessor\") != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Payment/Implementors.sol\":877:952  if(ws.GetAddress(\"Payment.Proccessor\") != msg.sender)... */\n      tag_37\n      jumpi\n      pop\n        /* \"Payment/Implementors.sol\":951:952  0 */\n      0x00\n      swap2\n        /* \"Payment/Implementors.sol\":792:2079  function ImplementorReward(address _implementor) external returns(uint8){... */\n      swap1\n      pop\n      jump\t// out\n        /* \"Payment/Implementors.sol\":877:952  if(ws.GetAddress(\"Payment.Proccessor\") != msg.sender)... */\n    tag_37:\n        /* \"Payment/Implementors.sol\":991:1016  implementor[_implementor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"Payment/Implementors.sol\":965:988  Implementor storage imp */\n      0x00\n        /* \"Payment/Implementors.sol\":991:1016  implementor[_implementor] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Payment/Implementors.sol\":1032:1044  imp.epochEnd */\n      dup1\n      sload\n        /* \"Payment/Implementors.sol\":1032:1070  imp.epochEnd < uint32(block.timestamp) */\n      0xffffffff\n        /* \"Payment/Implementors.sol\":1054:1069  block.timestamp */\n      timestamp\n        /* \"Payment/Implementors.sol\":1032:1070  imp.epochEnd < uint32(block.timestamp) */\n      dup2\n      and\n        /* \"Payment/Implementors.sol\":1032:1044  imp.epochEnd */\n      0x0100000000\n      swap1\n      swap3\n      div\n      and\n        /* \"Payment/Implementors.sol\":1032:1070  imp.epochEnd < uint32(block.timestamp) */\n      lt\n        /* \"Payment/Implementors.sol\":1029:2003  if(imp.epochEnd < uint32(block.timestamp)){... */\n      iszero\n      tag_38\n      jumpi\n        /* \"Payment/Implementors.sol\":1108:1122  imp.epochSales */\n      dup1\n      sload\n      0xffffffff\n      and\n        /* \"Payment/Implementors.sol\":1155:1160  24999 */\n      0x61a7\n        /* \"Payment/Implementors.sol\":1142:1160  epochSales > 24999 */\n      dup2\n      gt\n        /* \"Payment/Implementors.sol\":1139:1890  if(epochSales > 24999)... */\n      iszero\n      tag_39\n      jumpi\n        /* \"Payment/Implementors.sol\":1179:1200  imp.epochReward = 200 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0xc80000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1139:1890  if(epochSales > 24999)... */\n      jump(tag_56)\n    tag_39:\n        /* \"Payment/Implementors.sol\":1236:1241  12499 */\n      0x30d3\n        /* \"Payment/Implementors.sol\":1223:1233  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":1223:1241  epochSales > 12499 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":1220:1890  if(epochSales > 12499)... */\n      iszero\n      tag_41\n      jumpi\n        /* \"Payment/Implementors.sol\":1260:1281  imp.epochReward = 150 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x960000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1220:1890  if(epochSales > 12499)... */\n      jump(tag_56)\n    tag_41:\n        /* \"Payment/Implementors.sol\":1317:1321  7499 */\n      0x1d4b\n        /* \"Payment/Implementors.sol\":1304:1314  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":1304:1321  epochSales > 7499 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":1301:1890  if(epochSales > 7499)... */\n      iszero\n      tag_43\n      jumpi\n        /* \"Payment/Implementors.sol\":1340:1361  imp.epochReward = 125 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x7d0000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1301:1890  if(epochSales > 7499)... */\n      jump(tag_56)\n    tag_43:\n        /* \"Payment/Implementors.sol\":1397:1401  4999 */\n      0x1387\n        /* \"Payment/Implementors.sol\":1384:1394  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":1384:1401  epochSales > 4999 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":1381:1890  if(epochSales > 4999)... */\n      iszero\n      tag_45\n      jumpi\n        /* \"Payment/Implementors.sol\":1420:1441  imp.epochReward = 100 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x640000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1381:1890  if(epochSales > 4999)... */\n      jump(tag_56)\n    tag_45:\n        /* \"Payment/Implementors.sol\":1477:1481  2499 */\n      0x09c3\n        /* \"Payment/Implementors.sol\":1464:1474  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":1464:1481  epochSales > 2499 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":1461:1890  if(epochSales > 2499)... */\n      iszero\n      tag_47\n      jumpi\n        /* \"Payment/Implementors.sol\":1500:1520  imp.epochReward = 80 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x500000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1461:1890  if(epochSales > 2499)... */\n      jump(tag_56)\n    tag_47:\n        /* \"Payment/Implementors.sol\":1556:1560  1499 */\n      0x05db\n        /* \"Payment/Implementors.sol\":1543:1553  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":1543:1560  epochSales > 1499 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":1540:1890  if(epochSales > 1499)... */\n      iszero\n      tag_49\n      jumpi\n        /* \"Payment/Implementors.sol\":1579:1599  imp.epochReward = 60 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x3c0000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1540:1890  if(epochSales > 1499)... */\n      jump(tag_56)\n    tag_49:\n        /* \"Payment/Implementors.sol\":1635:1638  999 */\n      0x03e7\n        /* \"Payment/Implementors.sol\":1622:1632  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":1622:1638  epochSales > 999 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":1619:1890  if(epochSales > 999)... */\n      iszero\n      tag_51\n      jumpi\n        /* \"Payment/Implementors.sol\":1657:1677  imp.epochReward = 50 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x320000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1619:1890  if(epochSales > 999)... */\n      jump(tag_56)\n    tag_51:\n        /* \"Payment/Implementors.sol\":1713:1716  499 */\n      0x01f3\n        /* \"Payment/Implementors.sol\":1700:1710  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":1700:1716  epochSales > 499 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":1697:1890  if(epochSales > 499)... */\n      iszero\n      tag_53\n      jumpi\n        /* \"Payment/Implementors.sol\":1735:1755  imp.epochReward = 40 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x280000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1697:1890  if(epochSales > 499)... */\n      jump(tag_56)\n    tag_53:\n        /* \"Payment/Implementors.sol\":1791:1794  249 */\n      0xf9\n        /* \"Payment/Implementors.sol\":1778:1788  epochSales */\n      dup2\n        /* \"Payment/Implementors.sol\":1778:1794  epochSales > 249 */\n      0xffffffff\n      and\n      gt\n        /* \"Payment/Implementors.sol\":1775:1890  if(epochSales > 249)... */\n      iszero\n      tag_55\n      jumpi\n        /* \"Payment/Implementors.sol\":1813:1833  imp.epochReward = 35 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x230000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1775:1890  if(epochSales > 249)... */\n      jump(tag_56)\n    tag_55:\n        /* \"Payment/Implementors.sol\":1870:1890  imp.epochReward = 30 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x1e0000000000000000\n      or\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1775:1890  if(epochSales > 249)... */\n    tag_56:\n        /* \"Payment/Implementors.sol\":1907:1928  delete imp.epochSales */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\n      and\n      dup3\n      sstore\n        /* \"Payment/Implementors.sol\":1965:1990  block.timestamp + 15 days */\n      tag_57\n        /* \"Payment/Implementors.sol\":1965:1980  block.timestamp */\n      timestamp\n        /* \"Payment/Implementors.sol\":1983:1990  15 days */\n      0x13c680\n        /* \"Payment/Implementors.sol\":1965:1990  block.timestamp + 15 days */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"Payment/Implementors.sol\":1943:1991  imp.epochEnd = uint32(block.timestamp + 15 days) */\n      dup3\n      sload\n      0xffffffff\n      swap2\n      swap1\n      swap2\n      and\n      0x0100000000\n      mul\n      0xffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      pop\n        /* \"Payment/Implementors.sol\":1029:2003  if(imp.epochEnd < uint32(block.timestamp)){... */\n    tag_38:\n        /* \"Payment/Implementors.sol\":2015:2034  imp.epochSales += 1 */\n      dup1\n      sload\n        /* \"Payment/Implementors.sol\":2033:2034  1 */\n      0x01\n      swap1\n        /* \"Payment/Implementors.sol\":2015:2018  imp */\n      dup3\n      swap1\n        /* \"Payment/Implementors.sol\":2015:2029  imp.epochSales */\n      0x00\n      swap1\n        /* \"Payment/Implementors.sol\":2015:2034  imp.epochSales += 1 */\n      tag_59\n      swap1\n        /* \"Payment/Implementors.sol\":2033:2034  1 */\n      dup5\n      swap1\n        /* \"Payment/Implementors.sol\":2015:2034  imp.epochSales += 1 */\n      0xffffffff\n      and\n      tag_60\n      jump\t// in\n    tag_59:\n      dup3\n      sload\n      0xffffffff\n      swap2\n      dup3\n      and\n      0x0100\n      swap4\n      swap1\n      swap4\n      exp\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap3\n      mul\n      not\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      pop\n        /* \"Payment/Implementors.sol\":2055:2070  imp.epochReward */\n      sload\n      0xff\n      0x010000000000000000\n      swap1\n      swap2\n      div\n      and\n      swap3\n        /* \"Payment/Implementors.sol\":792:2079  function ImplementorReward(address _implementor) external returns(uint8){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:168   */\n    tag_61:\n        /* \"#utility.yul\":100:142   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":89:143   */\n      and\n        /* \"#utility.yul\":82:87   */\n      dup2\n        /* \"#utility.yul\":79:144   */\n      eq\n        /* \"#utility.yul\":69:162   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":158:159   */\n      0x00\n        /* \"#utility.yul\":155:156   */\n      dup1\n        /* \"#utility.yul\":148:160   */\n      revert\n        /* \"#utility.yul\":69:162   */\n    tag_65:\n        /* \"#utility.yul\":14:168   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":173:420   */\n    tag_14:\n        /* \"#utility.yul\":232:238   */\n      0x00\n        /* \"#utility.yul\":285:287   */\n      0x20\n        /* \"#utility.yul\":273:282   */\n      dup3\n        /* \"#utility.yul\":264:271   */\n      dup5\n        /* \"#utility.yul\":260:283   */\n      sub\n        /* \"#utility.yul\":256:288   */\n      slt\n        /* \"#utility.yul\":253:305   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":301:302   */\n      0x00\n        /* \"#utility.yul\":298:299   */\n      dup1\n        /* \"#utility.yul\":291:303   */\n      revert\n        /* \"#utility.yul\":253:305   */\n    tag_67:\n        /* \"#utility.yul\":340:349   */\n      dup2\n        /* \"#utility.yul\":327:350   */\n      calldataload\n        /* \"#utility.yul\":359:390   */\n      tag_68\n        /* \"#utility.yul\":384:389   */\n      dup2\n        /* \"#utility.yul\":359:390   */\n      tag_61\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":409:414   */\n      swap4\n        /* \"#utility.yul\":173:420   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":799:1406   */\n    tag_22:\n        /* \"#utility.yul\":911:915   */\n      0x00\n        /* \"#utility.yul\":940:942   */\n      0x20\n        /* \"#utility.yul\":969:971   */\n      dup1\n        /* \"#utility.yul\":958:967   */\n      dup4\n        /* \"#utility.yul\":951:972   */\n      mstore\n        /* \"#utility.yul\":1001:1007   */\n      dup4\n        /* \"#utility.yul\":995:1008   */\n      mload\n        /* \"#utility.yul\":1044:1050   */\n      dup1\n        /* \"#utility.yul\":1039:1041   */\n      dup3\n        /* \"#utility.yul\":1028:1037   */\n      dup6\n        /* \"#utility.yul\":1024:1042   */\n      add\n        /* \"#utility.yul\":1017:1051   */\n      mstore\n        /* \"#utility.yul\":1069:1070   */\n      0x00\n        /* \"#utility.yul\":1079:1219   */\n    tag_71:\n        /* \"#utility.yul\":1093:1099   */\n      dup2\n        /* \"#utility.yul\":1090:1091   */\n      dup2\n        /* \"#utility.yul\":1087:1100   */\n      lt\n        /* \"#utility.yul\":1079:1219   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1188:1202   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1184:1207   */\n      dup4\n      add\n        /* \"#utility.yul\":1178:1208   */\n      mload\n        /* \"#utility.yul\":1154:1171   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1173:1175   */\n      0x40\n        /* \"#utility.yul\":1150:1176   */\n      add\n        /* \"#utility.yul\":1143:1209   */\n      mstore\n        /* \"#utility.yul\":1108:1118   */\n      dup3\n      add\n        /* \"#utility.yul\":1079:1219   */\n      jump(tag_71)\n    tag_73:\n        /* \"#utility.yul\":1083:1086   */\n      pop\n        /* \"#utility.yul\":1268:1269   */\n      0x00\n        /* \"#utility.yul\":1263:1265   */\n      0x40\n        /* \"#utility.yul\":1254:1260   */\n      dup3\n        /* \"#utility.yul\":1243:1252   */\n      dup7\n        /* \"#utility.yul\":1239:1261   */\n      add\n        /* \"#utility.yul\":1235:1266   */\n      add\n        /* \"#utility.yul\":1228:1270   */\n      mstore\n        /* \"#utility.yul\":1397:1399   */\n      0x40\n        /* \"#utility.yul\":1327:1393   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1322:1324   */\n      0x1f\n        /* \"#utility.yul\":1314:1320   */\n      dup4\n        /* \"#utility.yul\":1310:1325   */\n      add\n        /* \"#utility.yul\":1306:1394   */\n      and\n        /* \"#utility.yul\":1295:1304   */\n      dup6\n        /* \"#utility.yul\":1291:1395   */\n      add\n        /* \"#utility.yul\":1287:1400   */\n      add\n        /* \"#utility.yul\":1279:1400   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":799:1406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1947:2198   */\n    tag_36:\n        /* \"#utility.yul\":2017:2023   */\n      0x00\n        /* \"#utility.yul\":2070:2072   */\n      0x20\n        /* \"#utility.yul\":2058:2067   */\n      dup3\n        /* \"#utility.yul\":2049:2056   */\n      dup5\n        /* \"#utility.yul\":2045:2068   */\n      sub\n        /* \"#utility.yul\":2041:2073   */\n      slt\n        /* \"#utility.yul\":2038:2090   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2083:2084   */\n      dup1\n        /* \"#utility.yul\":2076:2088   */\n      revert\n        /* \"#utility.yul\":2038:2090   */\n    tag_77:\n        /* \"#utility.yul\":2118:2127   */\n      dup2\n        /* \"#utility.yul\":2112:2128   */\n      mload\n        /* \"#utility.yul\":2137:2168   */\n      tag_68\n        /* \"#utility.yul\":2162:2167   */\n      dup2\n        /* \"#utility.yul\":2137:2168   */\n      tag_61\n      jump\t// in\n        /* \"#utility.yul\":2203:2387   */\n    tag_62:\n        /* \"#utility.yul\":2255:2332   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2252:2253   */\n      0x00\n        /* \"#utility.yul\":2245:2333   */\n      mstore\n        /* \"#utility.yul\":2352:2356   */\n      0x11\n        /* \"#utility.yul\":2349:2350   */\n      0x04\n        /* \"#utility.yul\":2342:2357   */\n      mstore\n        /* \"#utility.yul\":2376:2380   */\n      0x24\n        /* \"#utility.yul\":2373:2374   */\n      0x00\n        /* \"#utility.yul\":2366:2381   */\n      revert\n        /* \"#utility.yul\":2392:2517   */\n    tag_58:\n        /* \"#utility.yul\":2457:2466   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2478:2488   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2475:2511   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":2491:2509   */\n      tag_82\n      tag_62\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2392:2517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2522:2694   */\n    tag_60:\n        /* \"#utility.yul\":2589:2599   */\n      0xffffffff\n        /* \"#utility.yul\":2619:2629   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":2631:2641   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":2615:2642   */\n      add\n      swap1\n        /* \"#utility.yul\":2654:2665   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2651:2688   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":2668:2686   */\n      tag_85\n      tag_62\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2651:2688   */\n      pop\n        /* \"#utility.yul\":2522:2694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ba35e0a10e0b1db29113f682ba5a01f0df30489643c16163e79a3540d231dfa564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610789806100206000396000f3fe6080604052600436106100385760003560e01c806309256eae146100535780638052474d146101035780639b84b9861461015957610042565b3661004257600080fd5b34801561004e57600080fd5b600080fd5b34801561005f57600080fd5b506100d861006e36600461063a565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208181526040918290208251606081018452905463ffffffff80821680845264010000000083049091169383018490526801000000000000000090910460ff16919093018190529192909190565b6040805163ffffffff948516815293909216602084015260ff16908201526060015b60405180910390f35b34801561010f57600080fd5b5061014c6040518060400160405280601481526020017f5061796d656e742e496d706c656d656e746f727300000000000000000000000081525081565b6040516100fa919061065e565b34801561016557600080fd5b5061017961017436600461063a565b61018b565b60405160ff90911681526020016100fa565b6040517f8b05f6de00000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f5061796d656e742e50726f63636573736f72000000000000000000000000000060448201526000903390737f6b1f900113a9b46e4f38395bfc28075324a9f490638b05f6de90606401602060405180830381865afa158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a91906106ca565b73ffffffffffffffffffffffffffffffffffffffff161461026d57506000919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020805463ffffffff4281166401000000009092041610156105c357805463ffffffff166161a78111156102f45781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668c80000000000000000178255610555565b6130d38163ffffffff16111561033a5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668960000000000000000178255610555565b611d4b8163ffffffff1611156103805781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16687d0000000000000000178255610555565b6113878163ffffffff1611156103c65781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668640000000000000000178255610555565b6109c38163ffffffff16111561040c5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668500000000000000000178255610555565b6105db8163ffffffff1611156104525781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16683c0000000000000000178255610555565b6103e78163ffffffff1611156104985781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668320000000000000000178255610555565b6101f38163ffffffff1611156104de5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668280000000000000000178255610555565b60f98163ffffffff1611156105235781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668230000000000000000178255610555565b81547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16681e00000000000000001782555b81547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000168255610588426213c680610716565b825463ffffffff91909116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff909116178255505b805460019082906000906105de90849063ffffffff1661072f565b825463ffffffff9182166101009390930a9283029190920219909116179055505460ff680100000000000000009091041692915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461063757600080fd5b50565b60006020828403121561064c57600080fd5b813561065781610615565b9392505050565b600060208083528351808285015260005b8181101561068b5785810183015185820160400152820161066f565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000602082840312156106dc57600080fd5b815161065781610615565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610729576107296106e7565b92915050565b63ffffffff81811683821601908082111561074c5761074c6106e7565b509291505056fea2646970667358221220ba35e0a10e0b1db29113f682ba5a01f0df30489643c16163e79a3540d231dfa564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x789 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9256EAE EQ PUSH2 0x53 JUMPI DUP1 PUSH4 0x8052474D EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x9B84B986 EQ PUSH2 0x159 JUMPI PUSH2 0x42 JUMP JUMPDEST CALLDATASIZE PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8 PUSH2 0x6E CALLDATASIZE PUSH1 0x4 PUSH2 0x63A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH5 0x100000000 DUP4 DIV SWAP1 SWAP2 AND SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5061796D656E742E496D706C656D656E746F7273000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x65E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x63A JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8B05F6DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E742E50726F63636573736F720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH20 0x7F6B1F900113A9B46E4F38395BFC28075324A9F4 SWAP1 PUSH4 0x8B05F6DE SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26D JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND PUSH5 0x100000000 SWAP1 SWAP3 DIV AND LT ISZERO PUSH2 0x5C3 JUMPI DUP1 SLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x61A7 DUP2 GT ISZERO PUSH2 0x2F4 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0xC80000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x30D3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x33A JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x960000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x1D4B DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x380 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x7D0000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x3C6 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x640000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x40C JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x500000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x5DB DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x452 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x3C0000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x3E7 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x498 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x320000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x4DE JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x280000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH1 0xF9 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x523 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x230000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x1E0000000000000000 OR DUP3 SSTORE JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 AND DUP3 SSTORE PUSH2 0x588 TIMESTAMP PUSH3 0x13C680 PUSH2 0x716 JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF SWAP1 SWAP2 AND OR DUP3 SSTORE POP JUMPDEST DUP1 SLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x5DE SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x72F JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP3 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP SLOAD PUSH1 0xFF PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x657 DUP2 PUSH2 0x615 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x68B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x66F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x657 DUP2 PUSH2 0x615 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x729 JUMPI PUSH2 0x729 PUSH2 0x6E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x74C JUMPI PUSH2 0x74C PUSH2 0x6E7 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA CALLDATALOAD 0xE0 LOG1 0xE SIGNEXTEND SAR 0xB2 SWAP2 SGT 0xF6 DUP3 0xBA GAS ADD CREATE 0xDF ADDRESS BASEFEE SWAP7 NUMBER 0xC1 PUSH2 0x63E7 SWAP11 CALLDATALOAD BLOCKHASH 0xD2 BALANCE 0xDF 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "181:2509:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ImplementorProfile_229": {
									"entryPoint": null,
									"id": 229,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@ImplementorReward_195": {
									"entryPoint": 395,
									"id": 195,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Name_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_236": {
									"entryPoint": null,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_243": {
									"entryPoint": null,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1948594f63c916f89116a89f9e083c71672787bcbd2ca8f5ed5a8c374cacf74f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32_t_uint32_t_uint8__to_t_uint32_t_uint32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint32": {
									"entryPoint": 1839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2696:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:109:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "146:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "155:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "158:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "148:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "148:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "148:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "100:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:73:1"
															},
															"nodeType": "YulIf",
															"src": "69:93:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "243:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "289:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "301:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "264:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "273:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "260:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "285:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:32:1"
															},
															"nodeType": "YulIf",
															"src": "253:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "314:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "340:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "327:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "318:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "384:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "359:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "359:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "359:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "399:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "409:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "399:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "209:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "220:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "232:6:1",
														"type": ""
													}
												],
												"src": "173:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "574:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "584:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "607:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "592:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "584:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "619:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "629:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "623:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "655:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "678:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "666:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "713:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "698:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "722:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "730:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "718:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "718:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "691:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "691:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "754:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "765:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "750:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "774:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "782:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:45:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32_t_uint32_t_uint8__to_t_uint32_t_uint32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "527:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "538:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "546:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "554:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "565:4:1",
														"type": ""
													}
												],
												"src": "425:369:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "920:486:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "930:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "940:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "934:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "958:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "969:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "951:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "951:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "981:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1001:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "995:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "985:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1039:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1044:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1017:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1060:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1069:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1064:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1129:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1158:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1169:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1154:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1154:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1173:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1150:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1150:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1192:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1200:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1188:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1188:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1204:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1184:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1184:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1178:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1178:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1143:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1143:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1090:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1093:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1087:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1101:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1103:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1112:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1115:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1108:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1108:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1103:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1083:3:1",
																"statements": []
															},
															"src": "1079:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1243:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1254:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1239:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1239:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1263:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1235:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1268:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1228:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:121:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1295:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1314:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1322:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1310:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1310:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1327:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1306:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1306:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1291:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1291:104:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1397:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1287:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:113:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "889:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "799:607:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1508:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1518:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1530:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1526:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1518:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1560:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1575:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1583:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1553:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1477:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1488:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1499:4:1",
														"type": ""
													}
												],
												"src": "1411:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1774:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1802:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1784:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1836:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1821:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1814:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1814:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1864:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1875:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1860:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1860:18:1"
																	},
																	{
																		"hexValue": "5061796d656e742e50726f63636573736f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1880:20:1",
																		"type": "",
																		"value": "Payment.Proccessor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1910:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1922:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1933:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1918:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1918:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1910:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1948594f63c916f89116a89f9e083c71672787bcbd2ca8f5ed5a8c374cacf74f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1751:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1765:4:1",
														"type": ""
													}
												],
												"src": "1600:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2028:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2074:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2083:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2086:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2076:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2076:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2076:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2049:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2058:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2045:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2045:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2070:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:32:1"
															},
															"nodeType": "YulIf",
															"src": "2038:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2099:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2112:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2103:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2162:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2137:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2137:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2177:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2187:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1994:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2005:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2017:6:1",
														"type": ""
													}
												],
												"src": "1947:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2235:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2252:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2255:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2245:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2245:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2349:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2352:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2342:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2342:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2373:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2376:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2366:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2203:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2440:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2450:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2461:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2464:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2457:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2457:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2450:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2489:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2491:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2491:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2491:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2481:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2484:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2478:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:10:1"
															},
															"nodeType": "YulIf",
															"src": "2475:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2423:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2426:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2432:3:1",
														"type": ""
													}
												],
												"src": "2392:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2569:125:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2579:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2589:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2583:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2623:1:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:10:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2635:1:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2638:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2631:10:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2615:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:27:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2608:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2666:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2668:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2668:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2668:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2657:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2662:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2654:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2654:11:1"
															},
															"nodeType": "YulIf",
															"src": "2651:37:1"
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2552:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2555:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2561:3:1",
														"type": ""
													}
												],
												"src": "2522:172:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint32_t_uint32_t_uint8__to_t_uint32_t_uint32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_1948594f63c916f89116a89f9e083c71672787bcbd2ca8f5ed5a8c374cacf74f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Payment.Proccessor\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806309256eae146100535780638052474d146101035780639b84b9861461015957610042565b3661004257600080fd5b34801561004e57600080fd5b600080fd5b34801561005f57600080fd5b506100d861006e36600461063a565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208181526040918290208251606081018452905463ffffffff80821680845264010000000083049091169383018490526801000000000000000090910460ff16919093018190529192909190565b6040805163ffffffff948516815293909216602084015260ff16908201526060015b60405180910390f35b34801561010f57600080fd5b5061014c6040518060400160405280601481526020017f5061796d656e742e496d706c656d656e746f727300000000000000000000000081525081565b6040516100fa919061065e565b34801561016557600080fd5b5061017961017436600461063a565b61018b565b60405160ff90911681526020016100fa565b6040517f8b05f6de00000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f5061796d656e742e50726f63636573736f72000000000000000000000000000060448201526000903390737f6b1f900113a9b46e4f38395bfc28075324a9f490638b05f6de90606401602060405180830381865afa158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a91906106ca565b73ffffffffffffffffffffffffffffffffffffffff161461026d57506000919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020805463ffffffff4281166401000000009092041610156105c357805463ffffffff166161a78111156102f45781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668c80000000000000000178255610555565b6130d38163ffffffff16111561033a5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668960000000000000000178255610555565b611d4b8163ffffffff1611156103805781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16687d0000000000000000178255610555565b6113878163ffffffff1611156103c65781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668640000000000000000178255610555565b6109c38163ffffffff16111561040c5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668500000000000000000178255610555565b6105db8163ffffffff1611156104525781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16683c0000000000000000178255610555565b6103e78163ffffffff1611156104985781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668320000000000000000178255610555565b6101f38163ffffffff1611156104de5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668280000000000000000178255610555565b60f98163ffffffff1611156105235781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668230000000000000000178255610555565b81547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16681e00000000000000001782555b81547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000168255610588426213c680610716565b825463ffffffff91909116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff909116178255505b805460019082906000906105de90849063ffffffff1661072f565b825463ffffffff9182166101009390930a9283029190920219909116179055505460ff680100000000000000009091041692915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461063757600080fd5b50565b60006020828403121561064c57600080fd5b813561065781610615565b9392505050565b600060208083528351808285015260005b8181101561068b5785810183015185820160400152820161066f565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000602082840312156106dc57600080fd5b815161065781610615565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610729576107296106e7565b92915050565b63ffffffff81811683821601908082111561074c5761074c6106e7565b509291505056fea2646970667358221220ba35e0a10e0b1db29113f682ba5a01f0df30489643c16163e79a3540d231dfa564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9256EAE EQ PUSH2 0x53 JUMPI DUP1 PUSH4 0x8052474D EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x9B84B986 EQ PUSH2 0x159 JUMPI PUSH2 0x42 JUMP JUMPDEST CALLDATASIZE PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8 PUSH2 0x6E CALLDATASIZE PUSH1 0x4 PUSH2 0x63A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH5 0x100000000 DUP4 DIV SWAP1 SWAP2 AND SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5061796D656E742E496D706C656D656E746F7273000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x65E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x63A JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8B05F6DE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E742E50726F63636573736F720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH20 0x7F6B1F900113A9B46E4F38395BFC28075324A9F4 SWAP1 PUSH4 0x8B05F6DE SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26D JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND PUSH5 0x100000000 SWAP1 SWAP3 DIV AND LT ISZERO PUSH2 0x5C3 JUMPI DUP1 SLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x61A7 DUP2 GT ISZERO PUSH2 0x2F4 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0xC80000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x30D3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x33A JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x960000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x1D4B DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x380 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x7D0000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x3C6 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x640000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x40C JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x500000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x5DB DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x452 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x3C0000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x3E7 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x498 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x320000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x4DE JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x280000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST PUSH1 0xF9 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x523 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x230000000000000000 OR DUP3 SSTORE PUSH2 0x555 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x1E0000000000000000 OR DUP3 SSTORE JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 AND DUP3 SSTORE PUSH2 0x588 TIMESTAMP PUSH3 0x13C680 PUSH2 0x716 JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF SWAP1 SWAP2 AND OR DUP3 SSTORE POP JUMPDEST DUP1 SLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x5DE SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x72F JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP3 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP SLOAD PUSH1 0xFF PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x657 DUP2 PUSH2 0x615 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x68B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x66F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x657 DUP2 PUSH2 0x615 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x729 JUMPI PUSH2 0x729 PUSH2 0x6E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x74C JUMPI PUSH2 0x74C PUSH2 0x6E7 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA CALLDATALOAD 0xE0 LOG1 0xE SIGNEXTEND SAR 0xB2 SWAP2 SGT 0xF6 DUP3 0xBA GAS ADD CREATE 0xDF ADDRESS BASEFEE SWAP7 NUMBER 0xC1 PUSH2 0x63E7 SWAP11 CALLDATALOAD BLOCKHASH 0xD2 BALANCE 0xDF 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "181:2509:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2603:8;;;181:2509;;;;;;;;;;2668:8;;;2166:311;;;;;;;;;;-1:-1:-1;2166:311:0;;;;;:::i;:::-;2330:25;;2238:17;2330:25;;;;;;;;;;;;2305:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:311;;;;;629:10:1;666:15;;;648:34;;718:15;;;;713:2;698:18;;691:43;782:4;770:17;750:18;;;743:45;607:2;592:18;2166:311:0;;;;;;;;211:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;792:1287::-;;;;;;;;;;-1:-1:-1;792:1287:0;;;;;:::i;:::-;;:::i;:::-;;;1583:4:1;1571:17;;;1553:36;;1541:2;1526:18;792:1287:0;1411:184:1;792:1287:0;880:35;;;;;1802:2:1;880:35:0;;;1784:21:1;1841:2;1821:18;;;1814:30;1880:20;1860:18;;;1853:48;858:5:0;;919:10;;316:42;;880:13;;1918:18:1;;880:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;877:75;;-1:-1:-1;951:1:0;;792:1287;-1:-1:-1;792:1287:0:o;877:75::-;991:25;;;965:23;991:25;;;;;;;;;;1032:12;;:38;1054:15;1032:38;;:12;;;;;:38;1029:974;;;1108:14;;;;1155:5;1142:18;;1139:751;;;1179:21;;;;;;;;1139:751;;;1236:5;1223:10;:18;;;1220:670;;;1260:21;;;;;;;;1220:670;;;1317:4;1304:10;:17;;;1301:589;;;1340:21;;;;;;;;1301:589;;;1397:4;1384:10;:17;;;1381:509;;;1420:21;;;;;;;;1381:509;;;1477:4;1464:10;:17;;;1461:429;;;1500:20;;;;;;;;1461:429;;;1556:4;1543:10;:17;;;1540:350;;;1579:20;;;;;;;;1540:350;;;1635:3;1622:10;:16;;;1619:271;;;1657:20;;;;;;;;1619:271;;;1713:3;1700:10;:16;;;1697:193;;;1735:20;;;;;;;;1697:193;;;1791:3;1778:10;:16;;;1775:115;;;1813:20;;;;;;;;1775:115;;;1870:20;;;;;;;;1775:115;1907:21;;;;;;1965:25;:15;1983:7;1965:25;:::i;:::-;1943:48;;;;;;;;;;;;;;;;-1:-1:-1;1029:974:0;2015:19;;2033:1;;2015:3;;:14;;:19;;2033:1;;2015:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2055:15:0;;;;;;;;792:1287;-1:-1:-1;;792:1287:0:o;14:154:1:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:247::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;:::-;409:5;173:247;-1:-1:-1;;;173:247:1:o;799:607::-;911:4;940:2;969;958:9;951:21;1001:6;995:13;1044:6;1039:2;1028:9;1024:18;1017:34;1069:1;1079:140;1093:6;1090:1;1087:13;1079:140;;;1188:14;;;1184:23;;1178:30;1154:17;;;1173:2;1150:26;1143:66;1108:10;;1079:140;;;1083:3;1268:1;1263:2;1254:6;1243:9;1239:22;1235:31;1228:42;1397:2;1327:66;1322:2;1314:6;1310:15;1306:88;1295:9;1291:104;1287:113;1279:121;;;;799:607;;;;:::o;1947:251::-;2017:6;2070:2;2058:9;2049:7;2045:23;2041:32;2038:52;;;2086:1;2083;2076:12;2038:52;2118:9;2112:16;2137:31;2162:5;2137:31;:::i;2203:184::-;2255:77;2252:1;2245:88;2352:4;2349:1;2342:15;2376:4;2373:1;2366:15;2392:125;2457:9;;;2478:10;;;2475:36;;;2491:18;;:::i;:::-;2392:125;;;;:::o;2522:172::-;2589:10;2619;;;2631;;;2615:27;;2654:11;;;2651:37;;;2668:18;;:::i;:::-;2651:37;2522:172;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "385800",
								"executionCost": "424",
								"totalCost": "386224"
							},
							"external": {
								"": "157",
								"ImplementorProfile(address)": "2688",
								"ImplementorReward(address)": "infinite",
								"Name()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 2690,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 2690,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba35e0a10e0b1db29113f682ba5a01f0df30489643c16163e79a3540d231dfa564736f6c63430008120033",
									".code": [
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "9256EAE"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "8052474D"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "9B84B986"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 181,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2166,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 629,
											"end": 639,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 666,
											"end": 681,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 666,
											"end": 681,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 666,
											"end": 681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 648,
											"end": 682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 648,
											"end": 682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 718,
											"end": 733,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 718,
											"end": 733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 718,
											"end": 733,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 718,
											"end": 733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 713,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 716,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 698,
											"end": 716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 691,
											"end": 734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 782,
											"end": 786,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 770,
											"end": 787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 750,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 750,
											"end": 768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 743,
											"end": 788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 607,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 592,
											"end": 610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2477,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "5061796D656E742E496D706C656D656E746F7273000000000000000000000000"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 211,
											"end": 263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 211,
											"end": 263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 792,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 792,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1587,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1411,
											"end": 1595,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "8B05F6DE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "5061796D656E742E50726F63636573736F720000000000000000000000000000"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 858,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 929,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 919,
											"end": 929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "7F6B1F900113A9B46E4F38395BFC28075324A9F4"
										},
										{
											"begin": 316,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "8B05F6DE"
										},
										{
											"begin": 880,
											"end": 893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 1936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 880,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 915,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 880,
											"end": 915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 880,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 880,
											"end": 929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 880,
											"end": 929,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 877,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 877,
											"end": 952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 792,
											"end": 2079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 952,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 877,
											"end": 952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1054,
											"end": 1069,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 1032,
											"end": 1044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1044,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1044,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 2003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1029,
											"end": 2003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "61A7"
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1139,
											"end": 1890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "C80000000000000000"
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1139,
											"end": 1890,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1139,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "30D3"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1220,
											"end": 1890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1260,
											"end": 1281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1281,
											"name": "PUSH",
											"source": 0,
											"value": "960000000000000000"
										},
										{
											"begin": 1260,
											"end": 1281,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1281,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1220,
											"end": 1890,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1220,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "1D4B"
										},
										{
											"begin": 1304,
											"end": 1314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1301,
											"end": 1890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "7D0000000000000000"
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1361,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1301,
											"end": 1890,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1301,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "1387"
										},
										{
											"begin": 1384,
											"end": 1394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1384,
											"end": 1401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1401,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1381,
											"end": 1890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "PUSH",
											"source": 0,
											"value": "640000000000000000"
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1381,
											"end": 1890,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1381,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1481,
											"name": "PUSH",
											"source": 0,
											"value": "9C3"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1481,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1461,
											"end": 1890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "PUSH",
											"source": 0,
											"value": "500000000000000000"
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1461,
											"end": 1890,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1461,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1556,
											"end": 1560,
											"name": "PUSH",
											"source": 0,
											"value": "5DB"
										},
										{
											"begin": 1543,
											"end": 1553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1543,
											"end": 1560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1560,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1540,
											"end": 1890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "PUSH",
											"source": 0,
											"value": "3C0000000000000000"
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1540,
											"end": 1890,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1540,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1638,
											"name": "PUSH",
											"source": 0,
											"value": "3E7"
										},
										{
											"begin": 1622,
											"end": 1632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1622,
											"end": 1638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1638,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1619,
											"end": 1890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1677,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1657,
											"end": 1677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "320000000000000000"
										},
										{
											"begin": 1657,
											"end": 1677,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1677,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1677,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1619,
											"end": 1890,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1619,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1F3"
										},
										{
											"begin": 1700,
											"end": 1710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1700,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1716,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1697,
											"end": 1890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "PUSH",
											"source": 0,
											"value": "280000000000000000"
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1755,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1697,
											"end": 1890,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1697,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "F9"
										},
										{
											"begin": 1778,
											"end": 1788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1775,
											"end": 1890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1775,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1775,
											"end": 1890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "PUSH",
											"source": 0,
											"value": "230000000000000000"
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1775,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1775,
											"end": 1890,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1775,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1775,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1870,
											"end": 1890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1890,
											"name": "PUSH",
											"source": 0,
											"value": "1E0000000000000000"
										},
										{
											"begin": 1870,
											"end": 1890,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1890,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1775,
											"end": 1890,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1775,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000"
										},
										{
											"begin": 1907,
											"end": 1928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1928,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1965,
											"end": 1980,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "13C680"
										},
										{
											"begin": 1965,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1965,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 1990,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1965,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1991,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1029,
											"end": 2003,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1029,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2015,
											"end": 2034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 792,
											"end": 2079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 792,
											"end": 2079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 168,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 14,
											"end": 168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 100,
											"end": 142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 82,
											"end": 87,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 79,
											"end": 144,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 69,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 69,
											"end": 162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 158,
											"end": 159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 160,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 69,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 69,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 173,
											"end": 420,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 232,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 287,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 273,
											"end": 282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 264,
											"end": 271,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 260,
											"end": 283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 256,
											"end": 288,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 253,
											"end": 305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 253,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 253,
											"end": 305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 301,
											"end": 302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 291,
											"end": 303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 253,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 253,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 340,
											"end": 349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 359,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 359,
											"end": 390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 390,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 359,
											"end": 390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 173,
											"end": 420,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 173,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 1406,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 799,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 969,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 951,
											"end": 972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1007,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1219,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1079,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1219,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1079,
											"end": 1219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1171,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1079,
											"end": 1219,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1219,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1079,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1314,
											"end": 1320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1394,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1304,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1400,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 1406,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 799,
											"end": 1406,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 1406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 1406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 1406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 2198,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1947,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2056,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2045,
											"end": 2068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2073,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2090,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2038,
											"end": 2090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2088,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2090,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2038,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2162,
											"end": 2167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2137,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2387,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2203,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2252,
											"end": 2253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2356,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2342,
											"end": 2357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2381,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2392,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2488,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2511,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2475,
											"end": 2511,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2491,
											"end": 2509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2694,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2522,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2619,
											"end": 2629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2665,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2688,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2651,
											"end": 2688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2668,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Payment/Implementors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ImplementorProfile(address)": "09256eae",
							"ImplementorReward(address)": "9b84b986",
							"Name()": "8052474d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementor\",\"type\":\"address\"}],\"name\":\"ImplementorProfile\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"epochSales\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"epochEnd\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"epochReward\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementor\",\"type\":\"address\"}],\"name\":\"ImplementorReward\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Payment/Implementors.sol\":\"Implementors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"Payment/Implementors.sol\":{\"keccak256\":\"0xb4a1e83210b55972fb73fc19e84a33abd46a930f5e3c4ee70b844a60022502c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8718c959567b80dfbb60611cdc479ab84606e41c4f83ff5942aa11c2b574c335\",\"dweb:/ipfs/Qma3govqtuNYrz8fn9qaqhJcLLAWJLQ5q8tm2UtgU3NV1v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 33,
								"contract": "Payment/Implementors.sol:Implementors",
								"label": "implementor",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Implementor)28_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Implementor)28_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Implementors.Implementor)",
								"numberOfBytes": "32",
								"value": "t_struct(Implementor)28_storage"
							},
							"t_struct(Implementor)28_storage": {
								"encoding": "inplace",
								"label": "struct Implementors.Implementor",
								"members": [
									{
										"astId": 23,
										"contract": "Payment/Implementors.sol:Implementors",
										"label": "epochSales",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 25,
										"contract": "Payment/Implementors.sol:Implementors",
										"label": "epochEnd",
										"offset": 4,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 27,
										"contract": "Payment/Implementors.sol:Implementors",
										"label": "epochReward",
										"offset": 8,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ImplementorsInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "GetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"GetAddress(string)": "8b05f6de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"GetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Payment/Implementors.sol\":\"ImplementorsInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"Payment/Implementors.sol\":{\"keccak256\":\"0xb4a1e83210b55972fb73fc19e84a33abd46a930f5e3c4ee70b844a60022502c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8718c959567b80dfbb60611cdc479ab84606e41c4f83ff5942aa11c2b574c335\",\"dweb:/ipfs/Qma3govqtuNYrz8fn9qaqhJcLLAWJLQ5q8tm2UtgU3NV1v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Payment/Implementors.sol": {
				"ast": {
					"absolutePath": "Payment/Implementors.sol",
					"exportedSymbols": {
						"Implementors": [
							244
						],
						"ImplementorsInterface": [
							9
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ImplementorsInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "ImplementorsInterface",
							"nameLocation": "71:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8b05f6de",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "GetAddress",
									"nameLocation": "110:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "137:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "121:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "121:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "120:22:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "165:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "164:9:0"
									},
									"scope": 9,
									"src": "101:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "61:116:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Implementors",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "Implementors",
							"nameLocation": "190:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "8052474d",
									"id": 12,
									"mutability": "constant",
									"name": "Name",
									"nameLocation": "234:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 244,
									"src": "211:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 10,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "211:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5061796d656e742e496d706c656d656e746f7273",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "241:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_8cb711995f7465ac28d2c3267d15b9d5354cd4b9035279d5ef629e9b2d5ecf52",
											"typeString": "literal_string \"Payment.Implementors\""
										},
										"value": "Payment.Implementors"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 15,
									"mutability": "constant",
									"name": "workspaceAddress",
									"nameLocation": "297:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 244,
									"src": "272:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 13,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "272:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837463662314639303031313341396234364534463338333935624643323830373533323461394634",
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7F6b1F900113A9b46E4F38395bFC28075324a9F4"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 21,
									"mutability": "constant",
									"name": "ws",
									"nameLocation": "404:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 244,
									"src": "365:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ImplementorsInterface_$9",
										"typeString": "contract ImplementorsInterface"
									},
									"typeName": {
										"id": 17,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 16,
											"name": "ImplementorsInterface",
											"nameLocations": [
												"365:21:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 9,
											"src": "365:21:0"
										},
										"referencedDeclaration": 9,
										"src": "365:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ImplementorsInterface_$9",
											"typeString": "contract ImplementorsInterface"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 19,
												"name": "workspaceAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 15,
												"src": "431:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 18,
											"name": "ImplementorsInterface",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 9,
											"src": "409:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_ImplementorsInterface_$9_$",
												"typeString": "type(contract ImplementorsInterface)"
											}
										},
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "409:39:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ImplementorsInterface_$9",
											"typeString": "contract ImplementorsInterface"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "Implementors.Implementor",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "epochSales",
											"nameLocation": "572:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "565:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 22,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "565:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "epochEnd",
											"nameLocation": "600:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "593:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 24,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "593:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "epochReward",
											"nameLocation": "625:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "619:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 26,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "619:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Implementor",
									"nameLocation": "543:11:0",
									"nodeType": "StructDefinition",
									"scope": 244,
									"src": "536:108:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "implementor",
									"nameLocation": "693:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 244,
									"src": "652:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
										"typeString": "mapping(address => struct Implementors.Implementor)"
									},
									"typeName": {
										"id": 32,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "660:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "652:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
											"typeString": "mapping(address => struct Implementors.Implementor)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 31,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 30,
												"name": "Implementor",
												"nameLocations": [
													"671:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "671:11:0"
											},
											"referencedDeclaration": 28,
											"src": "671:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
												"typeString": "struct Implementors.Implementor"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "864:1215:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "5061796d656e742e50726f63636573736f72",
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "894:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_1948594f63c916f89116a89f9e083c71672787bcbd2ca8f5ed5a8c374cacf74f",
																	"typeString": "literal_string \"Payment.Proccessor\""
																},
																"value": "Payment.Proccessor"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_1948594f63c916f89116a89f9e083c71672787bcbd2ca8f5ed5a8c374cacf74f",
																	"typeString": "literal_string \"Payment.Proccessor\""
																}
															],
															"expression": {
																"id": 40,
																"name": "ws",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "880:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ImplementorsInterface_$9",
																	"typeString": "contract ImplementorsInterface"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "883:10:0",
															"memberName": "GetAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 8,
															"src": "880:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																"typeString": "function (string memory) view external returns (address)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "880:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 44,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "919:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "923:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "919:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "880:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 49,
												"nodeType": "IfStatement",
												"src": "877:75:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "951:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 39,
													"id": 48,
													"nodeType": "Return",
													"src": "944:8:0"
												}
											},
											{
												"assignments": [
													52
												],
												"declarations": [
													{
														"constant": false,
														"id": 52,
														"mutability": "mutable",
														"name": "imp",
														"nameLocation": "985:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "965:23:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
															"typeString": "struct Implementors.Implementor"
														},
														"typeName": {
															"id": 51,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 50,
																"name": "Implementor",
																"nameLocations": [
																	"965:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 28,
																"src": "965:11:0"
															},
															"referencedDeclaration": 28,
															"src": "965:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 56,
												"initialValue": {
													"baseExpression": {
														"id": 53,
														"name": "implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "991:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
															"typeString": "mapping(address => struct Implementors.Implementor storage ref)"
														}
													},
													"id": 55,
													"indexExpression": {
														"id": 54,
														"name": "_implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1003:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "991:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Implementor_$28_storage",
														"typeString": "struct Implementors.Implementor storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "965:51:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 57,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "1032:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor storage pointer"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1036:8:0",
														"memberName": "epochEnd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "1032:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 61,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1054:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1060:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1054:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1047:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 59,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "1047:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1047:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1032:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "1029:974:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "1071:932:0",
													"statements": [
														{
															"assignments": [
																66
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 66,
																	"mutability": "mutable",
																	"name": "epochSales",
																	"nameLocation": "1095:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 182,
																	"src": "1088:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 65,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1088:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 69,
															"initialValue": {
																"expression": {
																	"id": 67,
																	"name": "imp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "1108:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																		"typeString": "struct Implementors.Implementor storage pointer"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1112:10:0",
																"memberName": "epochSales",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 23,
																"src": "1108:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1088:34:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 70,
																	"name": "epochSales",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "1142:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "3234393939",
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1155:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_24999_by_1",
																		"typeString": "int_const 24999"
																	},
																	"value": "24999"
																},
																"src": "1142:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 79,
																		"name": "epochSales",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 66,
																		"src": "1223:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3132343939",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1236:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_12499_by_1",
																			"typeString": "int_const 12499"
																		},
																		"value": "12499"
																	},
																	"src": "1223:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 88,
																			"name": "epochSales",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "1304:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "37343939",
																			"id": 89,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1317:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_7499_by_1",
																				"typeString": "int_const 7499"
																			},
																			"value": "7499"
																		},
																		"src": "1304:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 99,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 97,
																				"name": "epochSales",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 66,
																				"src": "1384:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "34393939",
																				"id": 98,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1397:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4999_by_1",
																					"typeString": "int_const 4999"
																				},
																				"value": "4999"
																			},
																			"src": "1384:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 106,
																					"name": "epochSales",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 66,
																					"src": "1464:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "32343939",
																					"id": 107,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1477:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2499_by_1",
																						"typeString": "int_const 2499"
																					},
																					"value": "2499"
																				},
																				"src": "1464:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 115,
																						"name": "epochSales",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 66,
																						"src": "1543:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"hexValue": "31343939",
																						"id": 116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1556:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1499_by_1",
																							"typeString": "int_const 1499"
																						},
																						"value": "1499"
																					},
																					"src": "1543:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 126,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 124,
																							"name": "epochSales",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 66,
																							"src": "1622:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "393939",
																							"id": 125,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1635:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_999_by_1",
																								"typeString": "int_const 999"
																							},
																							"value": "999"
																						},
																						"src": "1622:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							},
																							"id": 135,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 133,
																								"name": "epochSales",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 66,
																								"src": "1700:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"hexValue": "343939",
																								"id": 134,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1713:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_499_by_1",
																									"typeString": "int_const 499"
																								},
																								"value": "499"
																							},
																							"src": "1700:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseBody": {
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								},
																								"id": 144,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 142,
																									"name": "epochSales",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 66,
																									"src": "1778:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint32",
																										"typeString": "uint32"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">",
																								"rightExpression": {
																									"hexValue": "323439",
																									"id": 143,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1791:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_249_by_1",
																										"typeString": "int_const 249"
																									},
																									"value": "249"
																								},
																								"src": "1778:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"falseBody": {
																								"expression": {
																									"id": 155,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"id": 151,
																											"name": "imp",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 52,
																											"src": "1870:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																												"typeString": "struct Implementors.Implementor storage pointer"
																											}
																										},
																										"id": 153,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberLocation": "1874:11:0",
																										"memberName": "epochReward",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 27,
																										"src": "1870:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "3330",
																										"id": 154,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1888:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_30_by_1",
																											"typeString": "int_const 30"
																										},
																										"value": "30"
																									},
																									"src": "1870:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"id": 156,
																								"nodeType": "ExpressionStatement",
																								"src": "1870:20:0"
																							},
																							"id": 157,
																							"nodeType": "IfStatement",
																							"src": "1775:115:0",
																							"trueBody": {
																								"expression": {
																									"id": 149,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"id": 145,
																											"name": "imp",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 52,
																											"src": "1813:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																												"typeString": "struct Implementors.Implementor storage pointer"
																											}
																										},
																										"id": 147,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberLocation": "1817:11:0",
																										"memberName": "epochReward",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 27,
																										"src": "1813:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "3335",
																										"id": 148,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1831:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_35_by_1",
																											"typeString": "int_const 35"
																										},
																										"value": "35"
																									},
																									"src": "1813:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"id": 150,
																								"nodeType": "ExpressionStatement",
																								"src": "1813:20:0"
																							}
																						},
																						"id": 158,
																						"nodeType": "IfStatement",
																						"src": "1697:193:0",
																						"trueBody": {
																							"expression": {
																								"id": 140,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"expression": {
																										"id": 136,
																										"name": "imp",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 52,
																										"src": "1735:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																											"typeString": "struct Implementors.Implementor storage pointer"
																										}
																									},
																									"id": 138,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"memberLocation": "1739:11:0",
																									"memberName": "epochReward",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 27,
																									"src": "1735:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"hexValue": "3430",
																									"id": 139,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1753:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_40_by_1",
																										"typeString": "int_const 40"
																									},
																									"value": "40"
																								},
																								"src": "1735:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"id": 141,
																							"nodeType": "ExpressionStatement",
																							"src": "1735:20:0"
																						}
																					},
																					"id": 159,
																					"nodeType": "IfStatement",
																					"src": "1619:271:0",
																					"trueBody": {
																						"expression": {
																							"id": 131,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"expression": {
																									"id": 127,
																									"name": "imp",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 52,
																									"src": "1657:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																										"typeString": "struct Implementors.Implementor storage pointer"
																									}
																								},
																								"id": 129,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"memberLocation": "1661:11:0",
																								"memberName": "epochReward",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 27,
																								"src": "1657:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"hexValue": "3530",
																								"id": 130,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1675:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_50_by_1",
																									"typeString": "int_const 50"
																								},
																								"value": "50"
																							},
																							"src": "1657:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"id": 132,
																						"nodeType": "ExpressionStatement",
																						"src": "1657:20:0"
																					}
																				},
																				"id": 160,
																				"nodeType": "IfStatement",
																				"src": "1540:350:0",
																				"trueBody": {
																					"expression": {
																						"id": 122,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 118,
																								"name": "imp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 52,
																								"src": "1579:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																									"typeString": "struct Implementors.Implementor storage pointer"
																								}
																							},
																							"id": 120,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "1583:11:0",
																							"memberName": "epochReward",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 27,
																							"src": "1579:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "3630",
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1597:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_60_by_1",
																								"typeString": "int_const 60"
																							},
																							"value": "60"
																						},
																						"src": "1579:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"id": 123,
																					"nodeType": "ExpressionStatement",
																					"src": "1579:20:0"
																				}
																			},
																			"id": 161,
																			"nodeType": "IfStatement",
																			"src": "1461:429:0",
																			"trueBody": {
																				"expression": {
																					"id": 113,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 109,
																							"name": "imp",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 52,
																							"src": "1500:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																								"typeString": "struct Implementors.Implementor storage pointer"
																							}
																						},
																						"id": 111,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "1504:11:0",
																						"memberName": "epochReward",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 27,
																						"src": "1500:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "3830",
																						"id": 112,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1518:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_80_by_1",
																							"typeString": "int_const 80"
																						},
																						"value": "80"
																					},
																					"src": "1500:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"id": 114,
																				"nodeType": "ExpressionStatement",
																				"src": "1500:20:0"
																			}
																		},
																		"id": 162,
																		"nodeType": "IfStatement",
																		"src": "1381:509:0",
																		"trueBody": {
																			"expression": {
																				"id": 104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 100,
																						"name": "imp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 52,
																						"src": "1420:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																							"typeString": "struct Implementors.Implementor storage pointer"
																						}
																					},
																					"id": 102,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "1424:11:0",
																					"memberName": "epochReward",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "1420:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "313030",
																					"id": 103,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1438:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "1420:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"id": 105,
																			"nodeType": "ExpressionStatement",
																			"src": "1420:21:0"
																		}
																	},
																	"id": 163,
																	"nodeType": "IfStatement",
																	"src": "1301:589:0",
																	"trueBody": {
																		"expression": {
																			"id": 95,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 91,
																					"name": "imp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 52,
																					"src": "1340:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																						"typeString": "struct Implementors.Implementor storage pointer"
																					}
																				},
																				"id": 93,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "1344:11:0",
																				"memberName": "epochReward",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 27,
																				"src": "1340:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "313235",
																				"id": 94,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1358:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_125_by_1",
																					"typeString": "int_const 125"
																				},
																				"value": "125"
																			},
																			"src": "1340:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 96,
																		"nodeType": "ExpressionStatement",
																		"src": "1340:21:0"
																	}
																},
																"id": 164,
																"nodeType": "IfStatement",
																"src": "1220:670:0",
																"trueBody": {
																	"expression": {
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 82,
																				"name": "imp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "1260:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																					"typeString": "struct Implementors.Implementor storage pointer"
																				}
																			},
																			"id": 84,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "1264:11:0",
																			"memberName": "epochReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 27,
																			"src": "1260:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "313530",
																			"id": 85,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1278:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_150_by_1",
																				"typeString": "int_const 150"
																			},
																			"value": "150"
																		},
																		"src": "1260:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 87,
																	"nodeType": "ExpressionStatement",
																	"src": "1260:21:0"
																}
															},
															"id": 165,
															"nodeType": "IfStatement",
															"src": "1139:751:0",
															"trueBody": {
																"expression": {
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 73,
																			"name": "imp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 52,
																			"src": "1179:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																				"typeString": "struct Implementors.Implementor storage pointer"
																			}
																		},
																		"id": 75,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "1183:11:0",
																		"memberName": "epochReward",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "1179:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "323030",
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1197:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	"src": "1179:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 78,
																"nodeType": "ExpressionStatement",
																"src": "1179:21:0"
															}
														},
														{
															"expression": {
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "1907:21:0",
																"subExpression": {
																	"expression": {
																		"id": 166,
																		"name": "imp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "1914:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																			"typeString": "struct Implementors.Implementor storage pointer"
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1918:10:0",
																	"memberName": "epochSales",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 23,
																	"src": "1914:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 169,
															"nodeType": "ExpressionStatement",
															"src": "1907:21:0"
														},
														{
															"expression": {
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 170,
																		"name": "imp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "1943:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																			"typeString": "struct Implementors.Implementor storage pointer"
																		}
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1947:8:0",
																	"memberName": "epochEnd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 25,
																	"src": "1943:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 175,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1965:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1971:9:0",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "1965:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "3135",
																				"id": 177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1983:7:0",
																				"subdenomination": "days",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1296000_by_1",
																					"typeString": "int_const 1296000"
																				},
																				"value": "15"
																			},
																			"src": "1965:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1958:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 173,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "1958:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1958:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "1943:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 181,
															"nodeType": "ExpressionStatement",
															"src": "1943:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 184,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2015:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor storage pointer"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2019:10:0",
														"memberName": "epochSales",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "2015:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2033:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2015:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "2015:19:0"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 190,
																"name": "imp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "2055:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																	"typeString": "struct Implementors.Implementor storage pointer"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2059:11:0",
															"memberName": "epochReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "2055:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 192,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2054:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 39,
												"id": 193,
												"nodeType": "Return",
												"src": "2047:24:0"
											}
										]
									},
									"functionSelector": "9b84b986",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ImplementorReward",
									"nameLocation": "801:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "_implementor",
												"nameLocation": "827:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "819:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:22:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "858:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 37,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "858:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:7:0"
									},
									"scope": 244,
									"src": "792:1287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "2292:185:0",
										"statements": [
											{
												"assignments": [
													208
												],
												"declarations": [
													{
														"constant": false,
														"id": 208,
														"mutability": "mutable",
														"name": "imp",
														"nameLocation": "2324:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 228,
														"src": "2305:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
															"typeString": "struct Implementors.Implementor"
														},
														"typeName": {
															"id": 207,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 206,
																"name": "Implementor",
																"nameLocations": [
																	"2305:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 28,
																"src": "2305:11:0"
															},
															"referencedDeclaration": 28,
															"src": "2305:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 212,
												"initialValue": {
													"baseExpression": {
														"id": 209,
														"name": "implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "2330:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
															"typeString": "mapping(address => struct Implementors.Implementor storage ref)"
														}
													},
													"id": 211,
													"indexExpression": {
														"id": 210,
														"name": "_implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "2342:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2330:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Implementor_$28_storage",
														"typeString": "struct Implementors.Implementor storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2305:50:0"
											},
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 213,
														"name": "epochSales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2368:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 214,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2381:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
																"typeString": "struct Implementors.Implementor memory"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2385:10:0",
														"memberName": "epochSales",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "2381:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2368:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "2368:27:0"
											},
											{
												"expression": {
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 218,
														"name": "epochEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2406:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 219,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2417:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
																"typeString": "struct Implementors.Implementor memory"
															}
														},
														"id": 220,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2421:8:0",
														"memberName": "epochEnd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "2417:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2406:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "2406:23:0"
											},
											{
												"expression": {
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 223,
														"name": "epochReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2440:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 224,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2454:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
																"typeString": "struct Implementors.Implementor memory"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2458:11:0",
														"memberName": "epochReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "2454:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2440:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2440:29:0"
											}
										]
									},
									"functionSelector": "09256eae",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ImplementorProfile",
									"nameLocation": "2175:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "_implementor",
												"nameLocation": "2202:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2194:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2193:22:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "epochSales",
												"nameLocation": "2245:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2238:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 199,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2238:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "epochEnd",
												"nameLocation": "2264:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2257:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 201,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2257:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "epochReward",
												"nameLocation": "2280:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2274:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 203,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:55:0"
									},
									"scope": 244,
									"src": "2166:311:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2590:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 232,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "2603:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2603:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2603:8:0"
											}
										]
									},
									"id": 236,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2571:2:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2590:0:0"
									},
									"scope": 244,
									"src": "2564:56:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "2647:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 239,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "2668:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2668:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "2668:8:0"
											}
										]
									},
									"id": 243,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2636:2:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2647:0:0"
									},
									"scope": 244,
									"src": "2628:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "181:2509:0",
							"usedErrors": []
						}
					],
					"src": "34:2656:0"
				},
				"id": 0
			}
		}
	}
}