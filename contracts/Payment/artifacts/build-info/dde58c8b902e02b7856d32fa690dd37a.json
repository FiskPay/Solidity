{
	"id": "dde58c8b902e02b7856d32fa690dd37a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Payment/Implementors.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.18;\r\n\r\ninterface IParent{\r\n\r\n    function GetContractAddress(string calldata _name) external view returns(address);\r\n}\r\n\r\ncontract Implementors{\r\n\r\n//-----------------------------------------------------------------------// v EVENTS\r\n\r\n//-----------------------------------------------------------------------// v INTERFACES\r\n\r\n    IParent constant private pt = IParent(parentAddress);\r\n\r\n//-----------------------------------------------------------------------// v BOOLEANS\r\n\r\n//-----------------------------------------------------------------------// v ADDRESSES\r\n\r\n    address constant private parentAddress = 0x72ec1287FF5BB960fd54Ac2AdAE99145153C561F;\r\n\r\n//-----------------------------------------------------------------------// v NUMBERS\r\n\r\n//-----------------------------------------------------------------------// v BYTES\r\n\r\n//-----------------------------------------------------------------------// v STRINGS\r\n\r\n    string constant public Name = \".Payment.Implementors\";\r\n\r\n//-----------------------------------------------------------------------// v STRUCTS\r\n\r\n    struct Implementor{\r\n        uint32 epochSales;\r\n        uint32 epochEnd;\r\n        uint8 epochReward;\r\n    }\r\n\r\n//-----------------------------------------------------------------------// v ENUMS\r\n\r\n//-----------------------------------------------------------------------// v MAPPINGS\r\n\r\n    mapping(string => address) private nameToAddress;\r\n    mapping(address => string) private addressToName;\r\n    //\r\n    mapping(address => Implementor) private implementor;\r\n\r\n//-----------------------------------------------------------------------// v MODIFIERS\r\n\r\n//-----------------------------------------------------------------------// v CONSTRUCTOR\r\n\r\n//-----------------------------------------------------------------------// v PRIVATE FUNCTIONS\r\n\r\n//-----------------------------------------------------------------------// v GET FUNCTIONS\r\n\r\n    function GetImplementorProfile(address _implementor) public view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){\r\n\r\n        Implementor memory imp = implementor[_implementor];\r\n\r\n        epochSales = imp.epochSales;\r\n        epochEnd = imp.epochEnd;\r\n        epochReward = imp.epochReward;\r\n    }\r\n\r\n//-----------------------------------------------------------------------// v SET FUNTIONS\r\n\r\n    function GetEpochReward(address _implementor) public returns(uint8){\r\n\r\n        if(pt.GetContractAddress(\".Payment.Proccessor\") != msg.sender)\r\n            revert(\"Proccessor only\");\r\n\r\n        Implementor storage imp = implementor[_implementor];\r\n\r\n        if(imp.epochEnd < uint32(block.timestamp)){\r\n\r\n            uint32 epochSales = imp.epochSales;\r\n\r\n            if(epochSales > 24999)\r\n                imp.epochReward = 200;\r\n            else if(epochSales > 12499)\r\n                imp.epochReward = 150;\r\n            else if(epochSales > 7499)\r\n                imp.epochReward = 125;\r\n            else if(epochSales > 4999)\r\n                imp.epochReward = 100;\r\n            else if(epochSales > 2499)\r\n                imp.epochReward = 80;\r\n            else if(epochSales > 1499)\r\n                imp.epochReward = 60;\r\n            else if(epochSales > 999)\r\n                imp.epochReward = 50;\r\n            else if(epochSales > 499)\r\n                imp.epochReward = 40;\r\n            else if(epochSales > 249)\r\n                imp.epochReward = 35;\r\n            else\r\n                imp.epochReward = 30;\r\n\r\n            delete imp.epochSales;\r\n            imp.epochEnd = uint32(block.timestamp + 15 days);\r\n        }\r\n\r\n        imp.epochSales += 1;\r\n\r\n        return(imp.epochReward);\r\n    }\r\n    \r\n//-----------------------------------------------------------------------// v DEFAULTS\r\n\r\n    receive() external payable{}\r\n    fallback() external payable{}\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 20000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Payment/Implementors.sol": {
				"IParent": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "GetContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"GetContractAddress(string)": "c75ffd86"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"GetContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Payment/Implementors.sol\":\"IParent\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"contracts/Payment/Implementors.sol\":{\"keccak256\":\"0x7fd04f9610a9e4e09916b98214bc60eaec061387d835ef6f1aee255539fdaf61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb8959e48f3d4d927523a07d8a0af8f47d6b103126326611ef43a18d61677d5\",\"dweb:/ipfs/QmSAjgp5BcwS8dZYiybeyA9sv2fADGiBTM51zvWQVVANX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Implementors": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementor",
									"type": "address"
								}
							],
							"name": "GetEpochReward",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementor",
									"type": "address"
								}
							],
							"name": "GetImplementorProfile",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "epochSales",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "epochEnd",
									"type": "uint32"
								},
								{
									"internalType": "uint8",
									"name": "epochReward",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Payment/Implementors.sol\":176:3874  contract Implementors{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Payment/Implementors.sol\":176:3874  contract Implementors{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6452c22d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8052474d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x925849ad\n      eq\n      tag_5\n      jumpi\n      stop\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"contracts/Payment/Implementors.sol\":2399:3706  function GetEpochReward(address _implementor) public returns(uint8){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":597:601   */\n      0xff\n        /* \"#utility.yul\":585:602   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":567:603   */\n      dup2\n      mstore\n        /* \"#utility.yul\":555:557   */\n      0x20\n        /* \"#utility.yul\":540:558   */\n      add\n        /* \"contracts/Payment/Implementors.sol\":2399:3706  function GetEpochReward(address _implementor) public returns(uint8){... */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Payment/Implementors.sol\":985:1038  string constant public Name = \".Payment.Implementors\" */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      0x2e5061796d656e742e496d706c656d656e746f72730000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n        /* \"contracts/Payment/Implementors.sol\":1985:2297  function GetImplementorProfile(address _implementor) public view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_24:\n        /* \"contracts/Payment/Implementors.sol\":2150:2175  implementor[_implementor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Payment/Implementors.sol\":2058:2075  uint32 epochSales */\n      0x00\n        /* \"contracts/Payment/Implementors.sol\":2150:2175  implementor[_implementor] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Payment/Implementors.sol\":2150:2161  implementor */\n      0x02\n        /* \"contracts/Payment/Implementors.sol\":2150:2175  implementor[_implementor] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Payment/Implementors.sol\":2125:2175  Implementor memory imp = implementor[_implementor] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      swap1\n      sload\n      0xffffffff\n      dup1\n      dup3\n      and\n      dup1\n      dup5\n      mstore\n      0x0100000000\n      dup4\n      div\n      swap1\n      swap2\n      and\n      swap4\n      dup4\n      add\n      dup5\n      swap1\n      mstore\n      0x010000000000000000\n      swap1\n      swap2\n      div\n      0xff\n      and\n      swap2\n      swap1\n      swap4\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n        /* \"contracts/Payment/Implementors.sol\":1985:2297  function GetImplementorProfile(address _implementor) public view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){... */\n      jump\n    tag_23:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1430:1440   */\n      0xffffffff\n        /* \"#utility.yul\":1467:1482   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":1449:1483   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1519:1534   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1499:1517   */\n      dup5\n      add\n        /* \"#utility.yul\":1492:1535   */\n      mstore\n        /* \"#utility.yul\":1583:1587   */\n      0xff\n        /* \"#utility.yul\":1571:1588   */\n      and\n        /* \"#utility.yul\":1551:1569   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1544:1589   */\n      mstore\n        /* \"#utility.yul\":1408:1410   */\n      0x60\n        /* \"#utility.yul\":1393:1411   */\n      add\n        /* \"contracts/Payment/Implementors.sol\":1985:2297  function GetImplementorProfile(address _implementor) public view returns(uint32 epochSales, uint32 epochEnd, uint8 epochReward){... */\n      tag_15\n        /* \"#utility.yul\":1226:1595   */\n      jump\n        /* \"contracts/Payment/Implementors.sol\":2399:3706  function GetEpochReward(address _implementor) public returns(uint8){... */\n    tag_14:\n        /* \"contracts/Payment/Implementors.sol\":2482:2526  pt.GetContractAddress(\".Payment.Proccessor\") */\n      mload(0x40)\n      0xc75ffd8600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1802:1804   */\n      0x20\n        /* \"contracts/Payment/Implementors.sol\":2482:2526  pt.GetContractAddress(\".Payment.Proccessor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1784:1805   */\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x13\n        /* \"#utility.yul\":1821:1839   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1814:1844   */\n      mstore\n        /* \"#utility.yul\":1880:1901   */\n      0x2e5061796d656e742e50726f63636573736f7200000000000000000000000000\n        /* \"#utility.yul\":1860:1878   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1853:1902   */\n      mstore\n        /* \"contracts/Payment/Implementors.sol\":2460:2465  uint8 */\n      0x00\n      swap1\n        /* \"contracts/Payment/Implementors.sol\":2530:2540  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Payment/Implementors.sol\":669:711  0x72ec1287FF5BB960fd54Ac2AdAE99145153C561F */\n      0x72ec1287ff5bb960fd54ac2adae99145153c561f\n      swap1\n        /* \"contracts/Payment/Implementors.sol\":2482:2503  pt.GetContractAddress */\n      0xc75ffd86\n      swap1\n        /* \"#utility.yul\":1919:1937   */\n      0x64\n      add\n        /* \"contracts/Payment/Implementors.sol\":2482:2526  pt.GetContractAddress(\".Payment.Proccessor\") */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"contracts/Payment/Implementors.sol\":2482:2540  pt.GetContractAddress(\".Payment.Proccessor\") != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Payment/Implementors.sol\":2479:2580  if(pt.GetContractAddress(\".Payment.Proccessor\") != msg.sender)... */\n      tag_35\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":2555:2580  revert(\"Proccessor only\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2406:2408   */\n      0x20\n        /* \"contracts/Payment/Implementors.sol\":2555:2580  revert(\"Proccessor only\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2388:2409   */\n      mstore\n        /* \"#utility.yul\":2445:2447   */\n      0x0f\n        /* \"#utility.yul\":2425:2443   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2418:2448   */\n      mstore\n        /* \"#utility.yul\":2484:2501   */\n      0x50726f63636573736f72206f6e6c790000000000000000000000000000000000\n        /* \"#utility.yul\":2464:2482   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2457:2502   */\n      mstore\n        /* \"#utility.yul\":2519:2537   */\n      0x64\n      add\n        /* \"contracts/Payment/Implementors.sol\":2555:2580  revert(\"Proccessor only\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Payment/Implementors.sol\":2479:2580  if(pt.GetContractAddress(\".Payment.Proccessor\") != msg.sender)... */\n    tag_35:\n        /* \"contracts/Payment/Implementors.sol\":2619:2644  implementor[_implementor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/Payment/Implementors.sol\":2593:2616  Implementor storage imp */\n      0x00\n        /* \"contracts/Payment/Implementors.sol\":2619:2644  implementor[_implementor] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Payment/Implementors.sol\":2619:2630  implementor */\n      0x02\n        /* \"contracts/Payment/Implementors.sol\":2619:2644  implementor[_implementor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Payment/Implementors.sol\":2660:2672  imp.epochEnd */\n      dup1\n      sload\n        /* \"contracts/Payment/Implementors.sol\":2660:2698  imp.epochEnd < uint32(block.timestamp) */\n      0xffffffff\n        /* \"contracts/Payment/Implementors.sol\":2682:2697  block.timestamp */\n      timestamp\n        /* \"contracts/Payment/Implementors.sol\":2660:2698  imp.epochEnd < uint32(block.timestamp) */\n      dup2\n      and\n        /* \"contracts/Payment/Implementors.sol\":2660:2672  imp.epochEnd */\n      0x0100000000\n      swap1\n      swap3\n      div\n      and\n        /* \"contracts/Payment/Implementors.sol\":2660:2698  imp.epochEnd < uint32(block.timestamp) */\n      lt\n        /* \"contracts/Payment/Implementors.sol\":2657:3631  if(imp.epochEnd < uint32(block.timestamp)){... */\n      iszero\n      tag_38\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":2736:2750  imp.epochSales */\n      dup1\n      sload\n      0xffffffff\n      and\n        /* \"contracts/Payment/Implementors.sol\":2783:2788  24999 */\n      0x61a7\n        /* \"contracts/Payment/Implementors.sol\":2770:2788  epochSales > 24999 */\n      dup2\n      gt\n        /* \"contracts/Payment/Implementors.sol\":2767:3518  if(epochSales > 24999)... */\n      iszero\n      tag_39\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":2807:2828  imp.epochReward = 200 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0xc80000000000000000\n      or\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":2767:3518  if(epochSales > 24999)... */\n      jump(tag_56)\n    tag_39:\n        /* \"contracts/Payment/Implementors.sol\":2864:2869  12499 */\n      0x30d3\n        /* \"contracts/Payment/Implementors.sol\":2851:2861  epochSales */\n      dup2\n        /* \"contracts/Payment/Implementors.sol\":2851:2869  epochSales > 12499 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Payment/Implementors.sol\":2848:3518  if(epochSales > 12499)... */\n      iszero\n      tag_41\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":2888:2909  imp.epochReward = 150 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x960000000000000000\n      or\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":2848:3518  if(epochSales > 12499)... */\n      jump(tag_56)\n    tag_41:\n        /* \"contracts/Payment/Implementors.sol\":2945:2949  7499 */\n      0x1d4b\n        /* \"contracts/Payment/Implementors.sol\":2932:2942  epochSales */\n      dup2\n        /* \"contracts/Payment/Implementors.sol\":2932:2949  epochSales > 7499 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Payment/Implementors.sol\":2929:3518  if(epochSales > 7499)... */\n      iszero\n      tag_43\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":2968:2989  imp.epochReward = 125 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x7d0000000000000000\n      or\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":2929:3518  if(epochSales > 7499)... */\n      jump(tag_56)\n    tag_43:\n        /* \"contracts/Payment/Implementors.sol\":3025:3029  4999 */\n      0x1387\n        /* \"contracts/Payment/Implementors.sol\":3012:3022  epochSales */\n      dup2\n        /* \"contracts/Payment/Implementors.sol\":3012:3029  epochSales > 4999 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Payment/Implementors.sol\":3009:3518  if(epochSales > 4999)... */\n      iszero\n      tag_45\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":3048:3069  imp.epochReward = 100 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x640000000000000000\n      or\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":3009:3518  if(epochSales > 4999)... */\n      jump(tag_56)\n    tag_45:\n        /* \"contracts/Payment/Implementors.sol\":3105:3109  2499 */\n      0x09c3\n        /* \"contracts/Payment/Implementors.sol\":3092:3102  epochSales */\n      dup2\n        /* \"contracts/Payment/Implementors.sol\":3092:3109  epochSales > 2499 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Payment/Implementors.sol\":3089:3518  if(epochSales > 2499)... */\n      iszero\n      tag_47\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":3128:3148  imp.epochReward = 80 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x500000000000000000\n      or\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":3089:3518  if(epochSales > 2499)... */\n      jump(tag_56)\n    tag_47:\n        /* \"contracts/Payment/Implementors.sol\":3184:3188  1499 */\n      0x05db\n        /* \"contracts/Payment/Implementors.sol\":3171:3181  epochSales */\n      dup2\n        /* \"contracts/Payment/Implementors.sol\":3171:3188  epochSales > 1499 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Payment/Implementors.sol\":3168:3518  if(epochSales > 1499)... */\n      iszero\n      tag_49\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":3207:3227  imp.epochReward = 60 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x3c0000000000000000\n      or\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":3168:3518  if(epochSales > 1499)... */\n      jump(tag_56)\n    tag_49:\n        /* \"contracts/Payment/Implementors.sol\":3263:3266  999 */\n      0x03e7\n        /* \"contracts/Payment/Implementors.sol\":3250:3260  epochSales */\n      dup2\n        /* \"contracts/Payment/Implementors.sol\":3250:3266  epochSales > 999 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Payment/Implementors.sol\":3247:3518  if(epochSales > 999)... */\n      iszero\n      tag_51\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":3285:3305  imp.epochReward = 50 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x320000000000000000\n      or\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":3247:3518  if(epochSales > 999)... */\n      jump(tag_56)\n    tag_51:\n        /* \"contracts/Payment/Implementors.sol\":3341:3344  499 */\n      0x01f3\n        /* \"contracts/Payment/Implementors.sol\":3328:3338  epochSales */\n      dup2\n        /* \"contracts/Payment/Implementors.sol\":3328:3344  epochSales > 499 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Payment/Implementors.sol\":3325:3518  if(epochSales > 499)... */\n      iszero\n      tag_53\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":3363:3383  imp.epochReward = 40 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x280000000000000000\n      or\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":3325:3518  if(epochSales > 499)... */\n      jump(tag_56)\n    tag_53:\n        /* \"contracts/Payment/Implementors.sol\":3419:3422  249 */\n      0xf9\n        /* \"contracts/Payment/Implementors.sol\":3406:3416  epochSales */\n      dup2\n        /* \"contracts/Payment/Implementors.sol\":3406:3422  epochSales > 249 */\n      0xffffffff\n      and\n      gt\n        /* \"contracts/Payment/Implementors.sol\":3403:3518  if(epochSales > 249)... */\n      iszero\n      tag_55\n      jumpi\n        /* \"contracts/Payment/Implementors.sol\":3441:3461  imp.epochReward = 35 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x230000000000000000\n      or\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":3403:3518  if(epochSales > 249)... */\n      jump(tag_56)\n    tag_55:\n        /* \"contracts/Payment/Implementors.sol\":3498:3518  imp.epochReward = 30 */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff\n      and\n      0x1e0000000000000000\n      or\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":3403:3518  if(epochSales > 249)... */\n    tag_56:\n        /* \"contracts/Payment/Implementors.sol\":3535:3556  delete imp.epochSales */\n      dup2\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\n      and\n      dup3\n      sstore\n        /* \"contracts/Payment/Implementors.sol\":3593:3618  block.timestamp + 15 days */\n      tag_57\n        /* \"contracts/Payment/Implementors.sol\":3593:3608  block.timestamp */\n      timestamp\n        /* \"contracts/Payment/Implementors.sol\":3611:3618  15 days */\n      0x13c680\n        /* \"contracts/Payment/Implementors.sol\":3593:3618  block.timestamp + 15 days */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"contracts/Payment/Implementors.sol\":3571:3619  imp.epochEnd = uint32(block.timestamp + 15 days) */\n      dup3\n      sload\n      0xffffffff\n      swap2\n      swap1\n      swap2\n      and\n      0x0100000000\n      mul\n      0xffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      pop\n        /* \"contracts/Payment/Implementors.sol\":2657:3631  if(imp.epochEnd < uint32(block.timestamp)){... */\n    tag_38:\n        /* \"contracts/Payment/Implementors.sol\":3643:3662  imp.epochSales += 1 */\n      dup1\n      sload\n        /* \"contracts/Payment/Implementors.sol\":3661:3662  1 */\n      0x01\n      swap1\n        /* \"contracts/Payment/Implementors.sol\":3643:3646  imp */\n      dup3\n      swap1\n        /* \"contracts/Payment/Implementors.sol\":3643:3657  imp.epochSales */\n      0x00\n      swap1\n        /* \"contracts/Payment/Implementors.sol\":3643:3662  imp.epochSales += 1 */\n      tag_59\n      swap1\n        /* \"contracts/Payment/Implementors.sol\":3661:3662  1 */\n      dup5\n      swap1\n        /* \"contracts/Payment/Implementors.sol\":3643:3662  imp.epochSales += 1 */\n      0xffffffff\n      and\n      tag_60\n      jump\t// in\n    tag_59:\n      dup3\n      sload\n      0xffffffff\n      swap2\n      dup3\n      and\n      0x0100\n      swap4\n      swap1\n      swap4\n      exp\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap3\n      mul\n      not\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Payment/Implementors.sol\":3682:3697  imp.epochReward */\n      sload\n      0xff\n      0x010000000000000000\n      swap1\n      swap2\n      div\n      and\n      swap3\n        /* \"contracts/Payment/Implementors.sol\":2399:3706  function GetEpochReward(address _implementor) public returns(uint8){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:168   */\n    tag_62:\n        /* \"#utility.yul\":100:142   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":89:143   */\n      and\n        /* \"#utility.yul\":82:87   */\n      dup2\n        /* \"#utility.yul\":79:144   */\n      eq\n        /* \"#utility.yul\":69:162   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":158:159   */\n      0x00\n        /* \"#utility.yul\":155:156   */\n      dup1\n        /* \"#utility.yul\":148:160   */\n      revert\n        /* \"#utility.yul\":69:162   */\n    tag_66:\n        /* \"#utility.yul\":14:168   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":173:420   */\n    tag_13:\n        /* \"#utility.yul\":232:238   */\n      0x00\n        /* \"#utility.yul\":285:287   */\n      0x20\n        /* \"#utility.yul\":273:282   */\n      dup3\n        /* \"#utility.yul\":264:271   */\n      dup5\n        /* \"#utility.yul\":260:283   */\n      sub\n        /* \"#utility.yul\":256:288   */\n      slt\n        /* \"#utility.yul\":253:305   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":301:302   */\n      0x00\n        /* \"#utility.yul\":298:299   */\n      dup1\n        /* \"#utility.yul\":291:303   */\n      revert\n        /* \"#utility.yul\":253:305   */\n    tag_68:\n        /* \"#utility.yul\":340:349   */\n      dup2\n        /* \"#utility.yul\":327:350   */\n      calldataload\n        /* \"#utility.yul\":359:390   */\n      tag_69\n        /* \"#utility.yul\":384:389   */\n      dup2\n        /* \"#utility.yul\":359:390   */\n      tag_62\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":409:414   */\n      swap4\n        /* \"#utility.yul\":173:420   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":614:1221   */\n    tag_21:\n        /* \"#utility.yul\":726:730   */\n      0x00\n        /* \"#utility.yul\":755:757   */\n      0x20\n        /* \"#utility.yul\":784:786   */\n      dup1\n        /* \"#utility.yul\":773:782   */\n      dup4\n        /* \"#utility.yul\":766:787   */\n      mstore\n        /* \"#utility.yul\":816:822   */\n      dup4\n        /* \"#utility.yul\":810:823   */\n      mload\n        /* \"#utility.yul\":859:865   */\n      dup1\n        /* \"#utility.yul\":854:856   */\n      dup3\n        /* \"#utility.yul\":843:852   */\n      dup6\n        /* \"#utility.yul\":839:857   */\n      add\n        /* \"#utility.yul\":832:866   */\n      mstore\n        /* \"#utility.yul\":884:885   */\n      0x00\n        /* \"#utility.yul\":894:1034   */\n    tag_72:\n        /* \"#utility.yul\":908:914   */\n      dup2\n        /* \"#utility.yul\":905:906   */\n      dup2\n        /* \"#utility.yul\":902:915   */\n      lt\n        /* \"#utility.yul\":894:1034   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1003:1017   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":999:1022   */\n      dup4\n      add\n        /* \"#utility.yul\":993:1023   */\n      mload\n        /* \"#utility.yul\":969:986   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":988:990   */\n      0x40\n        /* \"#utility.yul\":965:991   */\n      add\n        /* \"#utility.yul\":958:1024   */\n      mstore\n        /* \"#utility.yul\":923:933   */\n      dup3\n      add\n        /* \"#utility.yul\":894:1034   */\n      jump(tag_72)\n    tag_74:\n        /* \"#utility.yul\":898:901   */\n      pop\n        /* \"#utility.yul\":1083:1084   */\n      0x00\n        /* \"#utility.yul\":1078:1080   */\n      0x40\n        /* \"#utility.yul\":1069:1075   */\n      dup3\n        /* \"#utility.yul\":1058:1067   */\n      dup7\n        /* \"#utility.yul\":1054:1076   */\n      add\n        /* \"#utility.yul\":1050:1081   */\n      add\n        /* \"#utility.yul\":1043:1085   */\n      mstore\n        /* \"#utility.yul\":1212:1214   */\n      0x40\n        /* \"#utility.yul\":1142:1208   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1137:1139   */\n      0x1f\n        /* \"#utility.yul\":1129:1135   */\n      dup4\n        /* \"#utility.yul\":1125:1140   */\n      add\n        /* \"#utility.yul\":1121:1209   */\n      and\n        /* \"#utility.yul\":1110:1119   */\n      dup6\n        /* \"#utility.yul\":1106:1210   */\n      add\n        /* \"#utility.yul\":1102:1215   */\n      add\n        /* \"#utility.yul\":1094:1215   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":614:1221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1948:2199   */\n    tag_34:\n        /* \"#utility.yul\":2018:2024   */\n      0x00\n        /* \"#utility.yul\":2071:2073   */\n      0x20\n        /* \"#utility.yul\":2059:2068   */\n      dup3\n        /* \"#utility.yul\":2050:2057   */\n      dup5\n        /* \"#utility.yul\":2046:2069   */\n      sub\n        /* \"#utility.yul\":2042:2074   */\n      slt\n        /* \"#utility.yul\":2039:2091   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2084:2085   */\n      dup1\n        /* \"#utility.yul\":2077:2089   */\n      revert\n        /* \"#utility.yul\":2039:2091   */\n    tag_78:\n        /* \"#utility.yul\":2119:2128   */\n      dup2\n        /* \"#utility.yul\":2113:2129   */\n      mload\n        /* \"#utility.yul\":2138:2169   */\n      tag_69\n        /* \"#utility.yul\":2163:2168   */\n      dup2\n        /* \"#utility.yul\":2138:2169   */\n      tag_62\n      jump\t// in\n        /* \"#utility.yul\":2548:2732   */\n    tag_63:\n        /* \"#utility.yul\":2600:2677   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2597:2598   */\n      0x00\n        /* \"#utility.yul\":2590:2678   */\n      mstore\n        /* \"#utility.yul\":2697:2701   */\n      0x11\n        /* \"#utility.yul\":2694:2695   */\n      0x04\n        /* \"#utility.yul\":2687:2702   */\n      mstore\n        /* \"#utility.yul\":2721:2725   */\n      0x24\n        /* \"#utility.yul\":2718:2719   */\n      0x00\n        /* \"#utility.yul\":2711:2726   */\n      revert\n        /* \"#utility.yul\":2737:2862   */\n    tag_58:\n        /* \"#utility.yul\":2802:2811   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2823:2833   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2820:2856   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2836:2854   */\n      tag_84\n      tag_63\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2737:2862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2867:3039   */\n    tag_60:\n        /* \"#utility.yul\":2934:2944   */\n      0xffffffff\n        /* \"#utility.yul\":2964:2974   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":2976:2986   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":2960:2987   */\n      add\n      swap1\n        /* \"#utility.yul\":2999:3010   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2996:3033   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":3013:3031   */\n      tag_87\n      tag_63\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2996:3033   */\n      pop\n        /* \"#utility.yul\":2867:3039   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ad12dee8a1c6dad2add122c0ca1dbc457b2d2256481199dcda369a0672d9599b64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506107d4806100206000396000f3fe6080604052600436106100355760003560e01c80636452c22d1461003e5780638052474d14610075578063925849ad146100cb57005b3661003c57005b005b34801561004a57600080fd5b5061005e610059366004610685565b610178565b60405160ff90911681526020015b60405180910390f35b34801561008157600080fd5b506100be6040518060400160405280601581526020017f2e5061796d656e742e496d706c656d656e746f7273000000000000000000000081525081565b60405161006c91906106a9565b3480156100d757600080fd5b506101526100e6366004610685565b73ffffffffffffffffffffffffffffffffffffffff166000908152600260209081526040918290208251606081018452905463ffffffff80821680845264010000000083049091169383018490526801000000000000000090910460ff16919093018190529192909190565b6040805163ffffffff948516815293909216602084015260ff169082015260600161006c565b6040517fc75ffd8600000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f2e5061796d656e742e50726f63636573736f7200000000000000000000000000604482015260009033907372ec1287ff5bb960fd54ac2adae99145153c561f9063c75ffd8690606401602060405180830381865afa158015610213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102379190610715565b73ffffffffffffffffffffffffffffffffffffffff16146102b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f50726f63636573736f72206f6e6c790000000000000000000000000000000000604482015260640160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600260205260409020805463ffffffff42811664010000000090920416101561060e57805463ffffffff166161a781111561033f5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668c800000000000000001782556105a0565b6130d38163ffffffff1611156103855781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16689600000000000000001782556105a0565b611d4b8163ffffffff1611156103cb5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16687d00000000000000001782556105a0565b6113878163ffffffff1611156104115781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16686400000000000000001782556105a0565b6109c38163ffffffff1611156104575781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16685000000000000000001782556105a0565b6105db8163ffffffff16111561049d5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16683c00000000000000001782556105a0565b6103e78163ffffffff1611156104e35781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16683200000000000000001782556105a0565b6101f38163ffffffff1611156105295781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16682800000000000000001782556105a0565b60f98163ffffffff16111561056e5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16682300000000000000001782556105a0565b81547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16681e00000000000000001782555b81547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001682556105d3426213c680610761565b825463ffffffff91909116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff909116178255505b8054600190829060009061062990849063ffffffff1661077a565b825463ffffffff9182166101009390930a9283029190920219909116179055505460ff680100000000000000009091041692915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461068257600080fd5b50565b60006020828403121561069757600080fd5b81356106a281610660565b9392505050565b600060208083528351808285015260005b818110156106d6578581018301518582016040015282016106ba565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561072757600080fd5b81516106a281610660565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561077457610774610732565b92915050565b63ffffffff81811683821601908082111561079757610797610732565b509291505056fea2646970667358221220ad12dee8a1c6dad2add122c0ca1dbc457b2d2256481199dcda369a0672d9599b64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D4 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6452C22D EQ PUSH2 0x3E JUMPI DUP1 PUSH4 0x8052474D EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x925849AD EQ PUSH2 0xCB JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x3C JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E PUSH2 0x59 CALLDATASIZE PUSH1 0x4 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2E5061796D656E742E496D706C656D656E746F72730000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x6A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH5 0x100000000 DUP4 DIV SWAP1 SWAP2 AND SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC75FFD8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E5061796D656E742E50726F63636573736F7200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH20 0x72EC1287FF5BB960FD54AC2ADAE99145153C561F SWAP1 PUSH4 0xC75FFD86 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F63636573736F72206F6E6C790000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND PUSH5 0x100000000 SWAP1 SWAP3 DIV AND LT ISZERO PUSH2 0x60E JUMPI DUP1 SLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x61A7 DUP2 GT ISZERO PUSH2 0x33F JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0xC80000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x30D3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x385 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x960000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x1D4B DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x3CB JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x7D0000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x411 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x640000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x457 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x500000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x5DB DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x49D JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x3C0000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x3E7 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x4E3 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x320000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x529 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x280000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0xF9 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x56E JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x230000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x1E0000000000000000 OR DUP3 SSTORE JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 AND DUP3 SSTORE PUSH2 0x5D3 TIMESTAMP PUSH3 0x13C680 PUSH2 0x761 JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF SWAP1 SWAP2 AND OR DUP3 SSTORE POP JUMPDEST DUP1 SLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x629 SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x77A JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP3 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP SLOAD PUSH1 0xFF PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6A2 DUP2 PUSH2 0x660 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6BA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6A2 DUP2 PUSH2 0x660 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x774 JUMPI PUSH2 0x774 PUSH2 0x732 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x797 JUMPI PUSH2 0x797 PUSH2 0x732 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD SLT 0xDE 0xE8 LOG1 0xC6 0xDA 0xD2 0xAD 0xD1 0x22 0xC0 0xCA SAR 0xBC GASLIMIT PUSH28 0x2D2256481199DCDA369A0672D9599B64736F6C634300081200330000 ",
							"sourceMap": "176:3698:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GetEpochReward_239": {
									"entryPoint": 376,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@GetImplementorProfile_75": {
									"entryPoint": null,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@Name_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_243": {
									"entryPoint": null,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_247": {
									"entryPoint": null,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66c4fceec4c65f06ed806ed94426f7ae7c2fe41b8f3c6095829e27b4712de9be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db1436b45d4e788c5733c48dc298f55768bd05a8e2ba4785d588607e62aba86a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32_t_uint32_t_uint8__to_t_uint32_t_uint32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint32": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3041:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:109:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "146:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "155:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "158:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "148:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "148:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "148:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "100:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:73:1"
															},
															"nodeType": "YulIf",
															"src": "69:93:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "243:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "289:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "301:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "264:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "273:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "260:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "285:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:32:1"
															},
															"nodeType": "YulIf",
															"src": "253:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "314:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "340:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "327:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "318:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "384:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "359:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "359:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "359:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "399:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "409:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "399:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "209:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "220:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "232:6:1",
														"type": ""
													}
												],
												"src": "173:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "522:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "532:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "555:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "532:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "597:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "585:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "585:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "567:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "567:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "491:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "502:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "513:4:1",
														"type": ""
													}
												],
												"src": "425:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:486:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "745:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "755:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "749:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "773:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "784:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "796:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "810:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "800:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "854:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "859:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "832:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "875:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "884:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "879:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "944:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "973:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "984:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "969:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "988:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "965:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "965:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1007:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1015:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1003:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1003:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1019:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "999:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "999:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "993:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "993:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "958:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "958:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "905:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "908:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "902:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "916:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "918:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "927:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "930:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "923:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "923:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "918:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "898:3:1",
																"statements": []
															},
															"src": "894:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1058:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1069:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1054:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1054:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1078:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1050:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1083:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1043:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1094:121:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1110:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1129:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1137:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1125:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1125:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1142:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1106:104:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1212:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1102:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:113:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1094:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "704:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "715:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "726:4:1",
														"type": ""
													}
												],
												"src": "614:607:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1375:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1385:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1397:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1408:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1385:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1420:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1430:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1424:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1456:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1471:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1479:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1467:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1467:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1449:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1449:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1503:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1514:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1523:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1531:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1519:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1492:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1555:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1566:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1551:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1551:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "1575:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1583:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1544:45:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32_t_uint32_t_uint8__to_t_uint32_t_uint32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1328:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1339:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1355:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1366:4:1",
														"type": ""
													}
												],
												"src": "1226:369:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1774:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1802:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1784:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1836:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1821:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1814:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1814:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1864:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1875:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1860:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1860:18:1"
																	},
																	{
																		"hexValue": "2e5061796d656e742e50726f63636573736f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1880:21:1",
																		"type": "",
																		"value": ".Payment.Proccessor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1911:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1923:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1934:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1919:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1911:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66c4fceec4c65f06ed806ed94426f7ae7c2fe41b8f3c6095829e27b4712de9be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1751:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1765:4:1",
														"type": ""
													}
												],
												"src": "1600:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2029:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2075:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2084:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2077:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2077:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2077:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2050:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2059:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2046:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2042:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:32:1"
															},
															"nodeType": "YulIf",
															"src": "2039:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2100:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2113:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2104:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2163:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2178:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2188:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2178:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1995:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2006:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2018:6:1",
														"type": ""
													}
												],
												"src": "1948:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2378:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2395:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2406:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2388:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2440:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2425:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2445:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2479:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2464:18:1"
																	},
																	{
																		"hexValue": "50726f63636573736f72206f6e6c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2484:17:1",
																		"type": "",
																		"value": "Proccessor only"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2457:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2457:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2511:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2523:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2534:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2519:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2511:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db1436b45d4e788c5733c48dc298f55768bd05a8e2ba4785d588607e62aba86a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2355:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2369:4:1",
														"type": ""
													}
												],
												"src": "2204:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2580:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2600:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2590:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2590:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2697:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2687:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2718:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2721:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2711:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2711:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2548:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2785:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2795:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2806:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2809:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2802:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2795:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2834:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2836:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2836:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2836:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2826:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2829:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2823:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:10:1"
															},
															"nodeType": "YulIf",
															"src": "2820:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2768:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2771:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2777:3:1",
														"type": ""
													}
												],
												"src": "2737:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2914:125:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2924:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2934:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2928:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2953:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2968:1:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2971:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2964:10:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2980:1:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2983:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2976:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2976:10:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2960:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2960:27:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2953:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3011:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3013:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3013:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3013:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3002:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3007:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2999:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:11:1"
															},
															"nodeType": "YulIf",
															"src": "2996:37:1"
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2897:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2900:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2906:3:1",
														"type": ""
													}
												],
												"src": "2867:172:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_uint32_t_uint32_t_uint8__to_t_uint32_t_uint32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_66c4fceec4c65f06ed806ed94426f7ae7c2fe41b8f3c6095829e27b4712de9be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \".Payment.Proccessor\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_db1436b45d4e788c5733c48dc298f55768bd05a8e2ba4785d588607e62aba86a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Proccessor only\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100355760003560e01c80636452c22d1461003e5780638052474d14610075578063925849ad146100cb57005b3661003c57005b005b34801561004a57600080fd5b5061005e610059366004610685565b610178565b60405160ff90911681526020015b60405180910390f35b34801561008157600080fd5b506100be6040518060400160405280601581526020017f2e5061796d656e742e496d706c656d656e746f7273000000000000000000000081525081565b60405161006c91906106a9565b3480156100d757600080fd5b506101526100e6366004610685565b73ffffffffffffffffffffffffffffffffffffffff166000908152600260209081526040918290208251606081018452905463ffffffff80821680845264010000000083049091169383018490526801000000000000000090910460ff16919093018190529192909190565b6040805163ffffffff948516815293909216602084015260ff169082015260600161006c565b6040517fc75ffd8600000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f2e5061796d656e742e50726f63636573736f7200000000000000000000000000604482015260009033907372ec1287ff5bb960fd54ac2adae99145153c561f9063c75ffd8690606401602060405180830381865afa158015610213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102379190610715565b73ffffffffffffffffffffffffffffffffffffffff16146102b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f50726f63636573736f72206f6e6c790000000000000000000000000000000000604482015260640160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600260205260409020805463ffffffff42811664010000000090920416101561060e57805463ffffffff166161a781111561033f5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1668c800000000000000001782556105a0565b6130d38163ffffffff1611156103855781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16689600000000000000001782556105a0565b611d4b8163ffffffff1611156103cb5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16687d00000000000000001782556105a0565b6113878163ffffffff1611156104115781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16686400000000000000001782556105a0565b6109c38163ffffffff1611156104575781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16685000000000000000001782556105a0565b6105db8163ffffffff16111561049d5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16683c00000000000000001782556105a0565b6103e78163ffffffff1611156104e35781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16683200000000000000001782556105a0565b6101f38163ffffffff1611156105295781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16682800000000000000001782556105a0565b60f98163ffffffff16111561056e5781547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16682300000000000000001782556105a0565b81547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16681e00000000000000001782555b81547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001682556105d3426213c680610761565b825463ffffffff91909116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff909116178255505b8054600190829060009061062990849063ffffffff1661077a565b825463ffffffff9182166101009390930a9283029190920219909116179055505460ff680100000000000000009091041692915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461068257600080fd5b50565b60006020828403121561069757600080fd5b81356106a281610660565b9392505050565b600060208083528351808285015260005b818110156106d6578581018301518582016040015282016106ba565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561072757600080fd5b81516106a281610660565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561077457610774610732565b92915050565b63ffffffff81811683821601908082111561079757610797610732565b509291505056fea2646970667358221220ad12dee8a1c6dad2add122c0ca1dbc457b2d2256481199dcda369a0672d9599b64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6452C22D EQ PUSH2 0x3E JUMPI DUP1 PUSH4 0x8052474D EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x925849AD EQ PUSH2 0xCB JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x3C JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E PUSH2 0x59 CALLDATASIZE PUSH1 0x4 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2E5061796D656E742E496D706C656D656E746F72730000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x6A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x685 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH5 0x100000000 DUP4 DIV SWAP1 SWAP2 AND SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC75FFD8600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E5061796D656E742E50726F63636573736F7200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH20 0x72EC1287FF5BB960FD54AC2ADAE99145153C561F SWAP1 PUSH4 0xC75FFD86 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F63636573736F72206F6E6C790000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND PUSH5 0x100000000 SWAP1 SWAP3 DIV AND LT ISZERO PUSH2 0x60E JUMPI DUP1 SLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x61A7 DUP2 GT ISZERO PUSH2 0x33F JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0xC80000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x30D3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x385 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x960000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x1D4B DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x3CB JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x7D0000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x411 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x640000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x457 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x500000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x5DB DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x49D JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x3C0000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x3E7 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x4E3 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x320000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x529 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x280000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0xF9 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x56E JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x230000000000000000 OR DUP3 SSTORE PUSH2 0x5A0 JUMP JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x1E0000000000000000 OR DUP3 SSTORE JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 AND DUP3 SSTORE PUSH2 0x5D3 TIMESTAMP PUSH3 0x13C680 PUSH2 0x761 JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF SWAP1 SWAP2 AND OR DUP3 SSTORE POP JUMPDEST DUP1 SLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x629 SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x77A JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 SWAP1 SWAP4 EXP SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP3 MUL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP SLOAD PUSH1 0xFF PUSH9 0x10000000000000000 SWAP1 SWAP2 DIV AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6A2 DUP2 PUSH2 0x660 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6BA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6A2 DUP2 PUSH2 0x660 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x774 JUMPI PUSH2 0x774 PUSH2 0x732 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x797 JUMPI PUSH2 0x797 PUSH2 0x732 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD SLT 0xDE 0xE8 LOG1 0xC6 0xDA 0xD2 0xAD 0xD1 0x22 0xC0 0xCA SAR 0xBC GASLIMIT PUSH28 0x2D2256481199DCDA369A0672D9599B64736F6C634300081200330000 ",
							"sourceMap": "176:3698:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2399:1307;;;;;;;;;;-1:-1:-1;2399:1307:0;;;;;:::i;:::-;;:::i;:::-;;;597:4:1;585:17;;;567:36;;555:2;540:18;2399:1307:0;;;;;;;;985:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1985:312::-;;;;;;;;;;-1:-1:-1;1985:312:0;;;;;:::i;:::-;2150:25;;2058:17;2150:25;;;:11;:25;;;;;;;;;2125:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:312;;;;;1430:10:1;1467:15;;;1449:34;;1519:15;;;;1514:2;1499:18;;1492:43;1583:4;1571:17;1551:18;;;1544:45;1408:2;1393:18;1985:312:0;1226:369:1;2399:1307:0;2482:44;;;;;1802:2:1;2482:44:0;;;1784:21:1;1841:2;1821:18;;;1814:30;1880:21;1860:18;;;1853:49;2460:5:0;;2530:10;;669:42;;2482:21;;1919:18:1;;2482:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;;;2479:101;;2555:25;;;;;2406:2:1;2555:25:0;;;2388:21:1;2445:2;2425:18;;;2418:30;2484:17;2464:18;;;2457:45;2519:18;;2555:25:0;;;;;;;2479:101;2619:25;;;2593:23;2619:25;;;:11;:25;;;;;2660:12;;:38;2682:15;2660:38;;:12;;;;;:38;2657:974;;;2736:14;;;;2783:5;2770:18;;2767:751;;;2807:21;;;;;;;;2767:751;;;2864:5;2851:10;:18;;;2848:670;;;2888:21;;;;;;;;2848:670;;;2945:4;2932:10;:17;;;2929:589;;;2968:21;;;;;;;;2929:589;;;3025:4;3012:10;:17;;;3009:509;;;3048:21;;;;;;;;3009:509;;;3105:4;3092:10;:17;;;3089:429;;;3128:20;;;;;;;;3089:429;;;3184:4;3171:10;:17;;;3168:350;;;3207:20;;;;;;;;3168:350;;;3263:3;3250:10;:16;;;3247:271;;;3285:20;;;;;;;;3247:271;;;3341:3;3328:10;:16;;;3325:193;;;3363:20;;;;;;;;3325:193;;;3419:3;3406:10;:16;;;3403:115;;;3441:20;;;;;;;;3403:115;;;3498:20;;;;;;;;3403:115;3535:21;;;;;;3593:25;:15;3611:7;3593:25;:::i;:::-;3571:48;;;;;;;;;;;;;;;;-1:-1:-1;2657:974:0;3643:19;;3661:1;;3643:3;;:14;;:19;;3661:1;;3643:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3682:15:0;;;;;;;;2399:1307;-1:-1:-1;;2399:1307:0:o;14:154:1:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:247::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;:::-;409:5;173:247;-1:-1:-1;;;173:247:1:o;614:607::-;726:4;755:2;784;773:9;766:21;816:6;810:13;859:6;854:2;843:9;839:18;832:34;884:1;894:140;908:6;905:1;902:13;894:140;;;1003:14;;;999:23;;993:30;969:17;;;988:2;965:26;958:66;923:10;;894:140;;;898:3;1083:1;1078:2;1069:6;1058:9;1054:22;1050:31;1043:42;1212:2;1142:66;1137:2;1129:6;1125:15;1121:88;1110:9;1106:104;1102:113;1094:121;;;;614:607;;;;:::o;1948:251::-;2018:6;2071:2;2059:9;2050:7;2046:23;2042:32;2039:52;;;2087:1;2084;2077:12;2039:52;2119:9;2113:16;2138:31;2163:5;2138:31;:::i;2548:184::-;2600:77;2597:1;2590:88;2697:4;2694:1;2687:15;2721:4;2718:1;2711:15;2737:125;2802:9;;;2823:10;;;2820:36;;;2836:18;;:::i;:::-;2737:125;;;;:::o;2867:172::-;2934:10;2964;;;2976;;;2960:27;;2999:11;;;2996:37;;;3013:18;;:::i;:::-;2996:37;2867:172;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "400800",
								"executionCost": "436",
								"totalCost": "401236"
							},
							"external": {
								"": "117",
								"GetEpochReward(address)": "infinite",
								"GetImplementorProfile(address)": "2746",
								"Name()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 176,
									"end": 3874,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 3874,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad12dee8a1c6dad2add122c0ca1dbc457b2d2256481199dcda369a0672d9599b64736f6c63430008120033",
									".code": [
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "6452C22D"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "8052474D"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "925849AD"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 3874,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2399,
											"end": 3706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2399,
											"end": 3706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 585,
											"end": 602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 585,
											"end": 602,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 585,
											"end": 602,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 567,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 555,
											"end": 557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 540,
											"end": 558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "2E5061796D656E742E496D706C656D656E746F72730000000000000000000000"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 985,
											"end": 1038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1985,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2058,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2161,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1440,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1483,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1534,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1534,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1587,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1571,
											"end": 1588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1226,
											"end": 1595,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "C75FFD8600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1901,
											"name": "PUSH",
											"source": 1,
											"value": "2E5061796D656E742E50726F63636573736F7200000000000000000000000000"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "72EC1287FF5BB960FD54AC2ADAE99145153C561F"
										},
										{
											"begin": 669,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2503,
											"name": "PUSH",
											"source": 0,
											"value": "C75FFD86"
										},
										{
											"begin": 2482,
											"end": 2503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1919,
											"end": 1937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2482,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2482,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2479,
											"end": 2580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2501,
											"name": "PUSH",
											"source": 1,
											"value": "50726F63636573736F72206F6E6C790000000000000000000000000000000000"
										},
										{
											"begin": 2464,
											"end": 2482,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2464,
											"end": 2482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2580,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2580,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2479,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2644,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2682,
											"end": 2697,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 3631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2657,
											"end": 3631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2736,
											"end": 2750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "61A7"
										},
										{
											"begin": 2770,
											"end": 2788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2788,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "PUSH",
											"source": 0,
											"value": "C80000000000000000"
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2828,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2767,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "30D3"
										},
										{
											"begin": 2851,
											"end": 2861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "960000000000000000"
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2848,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2949,
											"name": "PUSH",
											"source": 0,
											"value": "1D4B"
										},
										{
											"begin": 2932,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2932,
											"end": 2949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 2949,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "PUSH",
											"source": 0,
											"value": "7D0000000000000000"
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2929,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "1387"
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3012,
											"end": 3029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3029,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "640000000000000000"
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3009,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3105,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "9C3"
										},
										{
											"begin": 3092,
											"end": 3102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3092,
											"end": 3109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3109,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "500000000000000000"
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3089,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3184,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "5DB"
										},
										{
											"begin": 3171,
											"end": 3181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3171,
											"end": 3188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3188,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "3C0000000000000000"
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3227,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3168,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "3E7"
										},
										{
											"begin": 3250,
											"end": 3260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "PUSH",
											"source": 0,
											"value": "320000000000000000"
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3305,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3247,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "1F3"
										},
										{
											"begin": 3328,
											"end": 3338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3328,
											"end": 3344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3344,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "280000000000000000"
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3363,
											"end": 3383,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3325,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "F9"
										},
										{
											"begin": 3406,
											"end": 3416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "230000000000000000"
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "PUSH",
											"source": 0,
											"value": "1E0000000000000000"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3403,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000"
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3556,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3593,
											"end": 3608,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3618,
											"name": "PUSH",
											"source": 0,
											"value": "13C680"
										},
										{
											"begin": 3593,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3593,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3618,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3593,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF"
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3619,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2657,
											"end": 3631,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2657,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3643,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 3706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 3706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 168,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 14,
											"end": 168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 100,
											"end": 142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 82,
											"end": 87,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 79,
											"end": 144,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 69,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 69,
											"end": 162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 158,
											"end": 159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 160,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 69,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 69,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 173,
											"end": 420,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 173,
											"end": 420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 232,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 287,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 273,
											"end": 282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 264,
											"end": 271,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 260,
											"end": 283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 256,
											"end": 288,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 253,
											"end": 305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 253,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 253,
											"end": 305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 301,
											"end": 302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 291,
											"end": 303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 253,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 253,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 340,
											"end": 349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 327,
											"end": 350,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 359,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 359,
											"end": 390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 390,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 359,
											"end": 390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 414,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 173,
											"end": 420,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 173,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 1221,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 614,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 726,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 782,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 766,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 810,
											"end": 823,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 859,
											"end": 865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 854,
											"end": 856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 843,
											"end": 852,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 839,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 832,
											"end": 866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 884,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 894,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 905,
											"end": 906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 902,
											"end": 915,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 894,
											"end": 1034,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 894,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 894,
											"end": 1034,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1017,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1022,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1023,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 969,
											"end": 986,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 969,
											"end": 986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 969,
											"end": 986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 988,
											"end": 990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 923,
											"end": 933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 894,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 894,
											"end": 1034,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 894,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 894,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 898,
											"end": 901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1067,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1137,
											"end": 1139,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1119,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1215,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 1221,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 614,
											"end": 1221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 614,
											"end": 1221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 1221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 614,
											"end": 1221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2199,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1948,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2073,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2069,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2074,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2039,
											"end": 2091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2089,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2091,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2039,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2129,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2163,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2138,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2732,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2548,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2677,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2701,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2694,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2718,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2726,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2862,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2737,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2820,
											"end": 2856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2836,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3039,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2867,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2944,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2986,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2986,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 2987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 2987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3010,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2996,
											"end": 3033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3013,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3013,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3031,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3013,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3039,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 3039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Payment/Implementors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"GetEpochReward(address)": "6452c22d",
							"GetImplementorProfile(address)": "925849ad",
							"Name()": "8052474d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementor\",\"type\":\"address\"}],\"name\":\"GetEpochReward\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementor\",\"type\":\"address\"}],\"name\":\"GetImplementorProfile\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"epochSales\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"epochEnd\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"epochReward\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Payment/Implementors.sol\":\"Implementors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"contracts/Payment/Implementors.sol\":{\"keccak256\":\"0x7fd04f9610a9e4e09916b98214bc60eaec061387d835ef6f1aee255539fdaf61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb8959e48f3d4d927523a07d8a0af8f47d6b103126326611ef43a18d61677d5\",\"dweb:/ipfs/QmSAjgp5BcwS8dZYiybeyA9sv2fADGiBTM51zvWQVVANX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 32,
								"contract": "contracts/Payment/Implementors.sol:Implementors",
								"label": "nameToAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_string_memory_ptr,t_address)"
							},
							{
								"astId": 36,
								"contract": "contracts/Payment/Implementors.sol:Implementors",
								"label": "addressToName",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_string_storage)"
							},
							{
								"astId": 41,
								"contract": "contracts/Payment/Implementors.sol:Implementors",
								"label": "implementor",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Implementor)28_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_address,t_struct(Implementor)28_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Implementors.Implementor)",
								"numberOfBytes": "32",
								"value": "t_struct(Implementor)28_storage"
							},
							"t_mapping(t_string_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Implementor)28_storage": {
								"encoding": "inplace",
								"label": "struct Implementors.Implementor",
								"members": [
									{
										"astId": 23,
										"contract": "contracts/Payment/Implementors.sol:Implementors",
										"label": "epochSales",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 25,
										"contract": "contracts/Payment/Implementors.sol:Implementors",
										"label": "epochEnd",
										"offset": 4,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 27,
										"contract": "contracts/Payment/Implementors.sol:Implementors",
										"label": "epochReward",
										"offset": 8,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Payment/Implementors.sol": {
				"ast": {
					"absolutePath": "contracts/Payment/Implementors.sol",
					"exportedSymbols": {
						"IParent": [
							9
						],
						"Implementors": [
							248
						]
					},
					"id": 249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IParent",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "IParent",
							"nameLocation": "71:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c75ffd86",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "GetContractAddress",
									"nameLocation": "96:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "131:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "115:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:23:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "160:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "159:9:0"
									},
									"scope": 9,
									"src": "87:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 249,
							"src": "61:111:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Implementors",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 248,
							"linearizedBaseContracts": [
								248
							],
							"name": "Implementors",
							"nameLocation": "185:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 15,
									"mutability": "constant",
									"name": "pt",
									"nameLocation": "411:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 248,
									"src": "386:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IParent_$9",
										"typeString": "contract IParent"
									},
									"typeName": {
										"id": 11,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 10,
											"name": "IParent",
											"nameLocations": [
												"386:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 9,
											"src": "386:7:0"
										},
										"referencedDeclaration": 9,
										"src": "386:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IParent_$9",
											"typeString": "contract IParent"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 13,
												"name": "parentAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 18,
												"src": "424:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 12,
											"name": "IParent",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 9,
											"src": "416:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IParent_$9_$",
												"typeString": "type(contract IParent)"
											}
										},
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "416:22:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IParent_$9",
											"typeString": "contract IParent"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 18,
									"mutability": "constant",
									"name": "parentAddress",
									"nameLocation": "653:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 248,
									"src": "628:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837326563313238374646354242393630666435344163324164414539393134353135334335363146",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "669:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x72ec1287FF5BB960fd54Ac2AdAE99145153C561F"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "8052474d",
									"id": 21,
									"mutability": "constant",
									"name": "Name",
									"nameLocation": "1008:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 248,
									"src": "985:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 19,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "985:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2e5061796d656e742e496d706c656d656e746f7273",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1015:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0483997a1dcba6a34e4615fe19ccab5d148863c56bd2dc4b3ca05a5f11372e30",
											"typeString": "literal_string \".Payment.Implementors\""
										},
										"value": ".Payment.Implementors"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Implementors.Implementor",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "epochSales",
											"nameLocation": "1172:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "1165:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 22,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1165:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "epochEnd",
											"nameLocation": "1200:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "1193:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 24,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1193:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "epochReward",
											"nameLocation": "1225:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "1219:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 26,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1219:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Implementor",
									"nameLocation": "1143:11:0",
									"nodeType": "StructDefinition",
									"scope": 248,
									"src": "1136:108:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "nameToAddress",
									"nameLocation": "1464:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 248,
									"src": "1429:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
										"typeString": "mapping(string => address)"
									},
									"typeName": {
										"id": 31,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 29,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1437:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "1429:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
											"typeString": "mapping(string => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1447:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "addressToName",
									"nameLocation": "1519:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 248,
									"src": "1484:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
										"typeString": "mapping(address => string)"
									},
									"typeName": {
										"id": 35,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 33,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1492:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1484:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
											"typeString": "mapping(address => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 34,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1503:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "implementor",
									"nameLocation": "1587:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 248,
									"src": "1547:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
										"typeString": "mapping(address => struct Implementors.Implementor)"
									},
									"typeName": {
										"id": 40,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1555:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1547:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
											"typeString": "mapping(address => struct Implementors.Implementor)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 39,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 38,
												"name": "Implementor",
												"nameLocations": [
													"1566:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "1566:11:0"
											},
											"referencedDeclaration": 28,
											"src": "1566:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
												"typeString": "struct Implementors.Implementor"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "2112:185:0",
										"statements": [
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "imp",
														"nameLocation": "2144:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 74,
														"src": "2125:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
															"typeString": "struct Implementors.Implementor"
														},
														"typeName": {
															"id": 53,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 52,
																"name": "Implementor",
																"nameLocations": [
																	"2125:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 28,
																"src": "2125:11:0"
															},
															"referencedDeclaration": 28,
															"src": "2125:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"baseExpression": {
														"id": 55,
														"name": "implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "2150:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
															"typeString": "mapping(address => struct Implementors.Implementor storage ref)"
														}
													},
													"id": 57,
													"indexExpression": {
														"id": 56,
														"name": "_implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "2162:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2150:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Implementor_$28_storage",
														"typeString": "struct Implementors.Implementor storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2125:50:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 59,
														"name": "epochSales",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "2188:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 60,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2201:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
																"typeString": "struct Implementors.Implementor memory"
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2205:10:0",
														"memberName": "epochSales",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "2201:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2188:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "2188:27:0"
											},
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 64,
														"name": "epochEnd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2226:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 65,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2237:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
																"typeString": "struct Implementors.Implementor memory"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2241:8:0",
														"memberName": "epochEnd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "2237:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2226:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "2226:23:0"
											},
											{
												"expression": {
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 69,
														"name": "epochReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2260:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 70,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2274:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_memory_ptr",
																"typeString": "struct Implementors.Implementor memory"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2278:11:0",
														"memberName": "epochReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "2274:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2260:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "2260:29:0"
											}
										]
									},
									"functionSelector": "925849ad",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetImplementorProfile",
									"nameLocation": "1994:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_implementor",
												"nameLocation": "2024:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2016:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:22:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "epochSales",
												"nameLocation": "2065:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2058:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 45,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2058:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "epochEnd",
												"nameLocation": "2084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2077:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 47,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2077:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "epochReward",
												"nameLocation": "2100:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2094:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 49,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2094:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2057:55:0"
									},
									"scope": 248,
									"src": "1985:312:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2466:1240:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "2e5061796d656e742e50726f63636573736f72",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2504:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_66c4fceec4c65f06ed806ed94426f7ae7c2fe41b8f3c6095829e27b4712de9be",
																	"typeString": "literal_string \".Payment.Proccessor\""
																},
																"value": ".Payment.Proccessor"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_66c4fceec4c65f06ed806ed94426f7ae7c2fe41b8f3c6095829e27b4712de9be",
																	"typeString": "literal_string \".Payment.Proccessor\""
																}
															],
															"expression": {
																"id": 82,
																"name": "pt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "2482:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IParent_$9",
																	"typeString": "contract IParent"
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2485:18:0",
															"memberName": "GetContractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 8,
															"src": "2482:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																"typeString": "function (string memory) view external returns (address)"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2482:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 86,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2530:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2534:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2530:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2482:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 93,
												"nodeType": "IfStatement",
												"src": "2479:101:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "50726f63636573736f72206f6e6c79",
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2562:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_db1436b45d4e788c5733c48dc298f55768bd05a8e2ba4785d588607e62aba86a",
																	"typeString": "literal_string \"Proccessor only\""
																},
																"value": "Proccessor only"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_db1436b45d4e788c5733c48dc298f55768bd05a8e2ba4785d588607e62aba86a",
																	"typeString": "literal_string \"Proccessor only\""
																}
															],
															"id": 89,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2555:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2555:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 92,
													"nodeType": "ExpressionStatement",
													"src": "2555:25:0"
												}
											},
											{
												"assignments": [
													96
												],
												"declarations": [
													{
														"constant": false,
														"id": 96,
														"mutability": "mutable",
														"name": "imp",
														"nameLocation": "2613:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "2593:23:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
															"typeString": "struct Implementors.Implementor"
														},
														"typeName": {
															"id": 95,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 94,
																"name": "Implementor",
																"nameLocations": [
																	"2593:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 28,
																"src": "2593:11:0"
															},
															"referencedDeclaration": 28,
															"src": "2593:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"baseExpression": {
														"id": 97,
														"name": "implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "2619:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Implementor_$28_storage_$",
															"typeString": "mapping(address => struct Implementors.Implementor storage ref)"
														}
													},
													"id": 99,
													"indexExpression": {
														"id": 98,
														"name": "_implementor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2631:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2619:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Implementor_$28_storage",
														"typeString": "struct Implementors.Implementor storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2593:51:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 101,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "2660:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor storage pointer"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2664:8:0",
														"memberName": "epochEnd",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "2660:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 105,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2682:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2688:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2682:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint32_$",
																"typeString": "type(uint32)"
															},
															"typeName": {
																"id": 103,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "2675:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2675:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2660:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 227,
												"nodeType": "IfStatement",
												"src": "2657:974:0",
												"trueBody": {
													"id": 226,
													"nodeType": "Block",
													"src": "2699:932:0",
													"statements": [
														{
															"assignments": [
																110
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 110,
																	"mutability": "mutable",
																	"name": "epochSales",
																	"nameLocation": "2723:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 226,
																	"src": "2716:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 109,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2716:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 113,
															"initialValue": {
																"expression": {
																	"id": 111,
																	"name": "imp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2736:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																		"typeString": "struct Implementors.Implementor storage pointer"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2740:10:0",
																"memberName": "epochSales",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 23,
																"src": "2736:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2716:34:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 114,
																	"name": "epochSales",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "2770:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "3234393939",
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2783:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_24999_by_1",
																		"typeString": "int_const 24999"
																	},
																	"value": "24999"
																},
																"src": "2770:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 123,
																		"name": "epochSales",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 110,
																		"src": "2851:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3132343939",
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2864:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_12499_by_1",
																			"typeString": "int_const 12499"
																		},
																		"value": "12499"
																	},
																	"src": "2851:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"name": "epochSales",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "2932:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "37343939",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2945:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_7499_by_1",
																				"typeString": "int_const 7499"
																			},
																			"value": "7499"
																		},
																		"src": "2932:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 141,
																				"name": "epochSales",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "3012:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "34393939",
																				"id": 142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3025:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4999_by_1",
																					"typeString": "int_const 4999"
																				},
																				"value": "4999"
																			},
																			"src": "3012:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 150,
																					"name": "epochSales",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 110,
																					"src": "3092:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "32343939",
																					"id": 151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3105:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2499_by_1",
																						"typeString": "int_const 2499"
																					},
																					"value": "2499"
																				},
																				"src": "3092:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 159,
																						"name": "epochSales",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 110,
																						"src": "3171:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"hexValue": "31343939",
																						"id": 160,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3184:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1499_by_1",
																							"typeString": "int_const 1499"
																						},
																						"value": "1499"
																					},
																					"src": "3171:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 170,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 168,
																							"name": "epochSales",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 110,
																							"src": "3250:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "393939",
																							"id": 169,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3263:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_999_by_1",
																								"typeString": "int_const 999"
																							},
																							"value": "999"
																						},
																						"src": "3250:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							},
																							"id": 179,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 177,
																								"name": "epochSales",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 110,
																								"src": "3328:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"hexValue": "343939",
																								"id": 178,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3341:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_499_by_1",
																									"typeString": "int_const 499"
																								},
																								"value": "499"
																							},
																							"src": "3328:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"falseBody": {
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								},
																								"id": 188,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 186,
																									"name": "epochSales",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 110,
																									"src": "3406:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint32",
																										"typeString": "uint32"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">",
																								"rightExpression": {
																									"hexValue": "323439",
																									"id": 187,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3419:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_249_by_1",
																										"typeString": "int_const 249"
																									},
																									"value": "249"
																								},
																								"src": "3406:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"falseBody": {
																								"expression": {
																									"id": 199,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"id": 195,
																											"name": "imp",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 96,
																											"src": "3498:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																												"typeString": "struct Implementors.Implementor storage pointer"
																											}
																										},
																										"id": 197,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberLocation": "3502:11:0",
																										"memberName": "epochReward",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 27,
																										"src": "3498:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "3330",
																										"id": 198,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3516:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_30_by_1",
																											"typeString": "int_const 30"
																										},
																										"value": "30"
																									},
																									"src": "3498:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"id": 200,
																								"nodeType": "ExpressionStatement",
																								"src": "3498:20:0"
																							},
																							"id": 201,
																							"nodeType": "IfStatement",
																							"src": "3403:115:0",
																							"trueBody": {
																								"expression": {
																									"id": 193,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"id": 189,
																											"name": "imp",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 96,
																											"src": "3441:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																												"typeString": "struct Implementors.Implementor storage pointer"
																											}
																										},
																										"id": 191,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberLocation": "3445:11:0",
																										"memberName": "epochReward",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 27,
																										"src": "3441:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "3335",
																										"id": 192,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3459:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_35_by_1",
																											"typeString": "int_const 35"
																										},
																										"value": "35"
																									},
																									"src": "3441:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"id": 194,
																								"nodeType": "ExpressionStatement",
																								"src": "3441:20:0"
																							}
																						},
																						"id": 202,
																						"nodeType": "IfStatement",
																						"src": "3325:193:0",
																						"trueBody": {
																							"expression": {
																								"id": 184,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"expression": {
																										"id": 180,
																										"name": "imp",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 96,
																										"src": "3363:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																											"typeString": "struct Implementors.Implementor storage pointer"
																										}
																									},
																									"id": 182,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"memberLocation": "3367:11:0",
																									"memberName": "epochReward",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 27,
																									"src": "3363:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"hexValue": "3430",
																									"id": 183,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3381:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_40_by_1",
																										"typeString": "int_const 40"
																									},
																									"value": "40"
																								},
																								"src": "3363:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"id": 185,
																							"nodeType": "ExpressionStatement",
																							"src": "3363:20:0"
																						}
																					},
																					"id": 203,
																					"nodeType": "IfStatement",
																					"src": "3247:271:0",
																					"trueBody": {
																						"expression": {
																							"id": 175,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"expression": {
																									"id": 171,
																									"name": "imp",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 96,
																									"src": "3285:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																										"typeString": "struct Implementors.Implementor storage pointer"
																									}
																								},
																								"id": 173,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"memberLocation": "3289:11:0",
																								"memberName": "epochReward",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 27,
																								"src": "3285:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"hexValue": "3530",
																								"id": 174,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3303:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_50_by_1",
																									"typeString": "int_const 50"
																								},
																								"value": "50"
																							},
																							"src": "3285:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"id": 176,
																						"nodeType": "ExpressionStatement",
																						"src": "3285:20:0"
																					}
																				},
																				"id": 204,
																				"nodeType": "IfStatement",
																				"src": "3168:350:0",
																				"trueBody": {
																					"expression": {
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 162,
																								"name": "imp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 96,
																								"src": "3207:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																									"typeString": "struct Implementors.Implementor storage pointer"
																								}
																							},
																							"id": 164,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "3211:11:0",
																							"memberName": "epochReward",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 27,
																							"src": "3207:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "3630",
																							"id": 165,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3225:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_60_by_1",
																								"typeString": "int_const 60"
																							},
																							"value": "60"
																						},
																						"src": "3207:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"id": 167,
																					"nodeType": "ExpressionStatement",
																					"src": "3207:20:0"
																				}
																			},
																			"id": 205,
																			"nodeType": "IfStatement",
																			"src": "3089:429:0",
																			"trueBody": {
																				"expression": {
																					"id": 157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 153,
																							"name": "imp",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 96,
																							"src": "3128:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																								"typeString": "struct Implementors.Implementor storage pointer"
																							}
																						},
																						"id": 155,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "3132:11:0",
																						"memberName": "epochReward",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 27,
																						"src": "3128:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "3830",
																						"id": 156,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3146:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_80_by_1",
																							"typeString": "int_const 80"
																						},
																						"value": "80"
																					},
																					"src": "3128:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"id": 158,
																				"nodeType": "ExpressionStatement",
																				"src": "3128:20:0"
																			}
																		},
																		"id": 206,
																		"nodeType": "IfStatement",
																		"src": "3009:509:0",
																		"trueBody": {
																			"expression": {
																				"id": 148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 144,
																						"name": "imp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 96,
																						"src": "3048:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																							"typeString": "struct Implementors.Implementor storage pointer"
																						}
																					},
																					"id": 146,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "3052:11:0",
																					"memberName": "epochReward",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "3048:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "313030",
																					"id": 147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3066:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "3048:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"id": 149,
																			"nodeType": "ExpressionStatement",
																			"src": "3048:21:0"
																		}
																	},
																	"id": 207,
																	"nodeType": "IfStatement",
																	"src": "2929:589:0",
																	"trueBody": {
																		"expression": {
																			"id": 139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 135,
																					"name": "imp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 96,
																					"src": "2968:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																						"typeString": "struct Implementors.Implementor storage pointer"
																					}
																				},
																				"id": 137,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2972:11:0",
																				"memberName": "epochReward",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 27,
																				"src": "2968:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "313235",
																				"id": 138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2986:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_125_by_1",
																					"typeString": "int_const 125"
																				},
																				"value": "125"
																			},
																			"src": "2968:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 140,
																		"nodeType": "ExpressionStatement",
																		"src": "2968:21:0"
																	}
																},
																"id": 208,
																"nodeType": "IfStatement",
																"src": "2848:670:0",
																"trueBody": {
																	"expression": {
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 126,
																				"name": "imp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "2888:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																					"typeString": "struct Implementors.Implementor storage pointer"
																				}
																			},
																			"id": 128,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "2892:11:0",
																			"memberName": "epochReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 27,
																			"src": "2888:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "313530",
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2906:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_150_by_1",
																				"typeString": "int_const 150"
																			},
																			"value": "150"
																		},
																		"src": "2888:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 131,
																	"nodeType": "ExpressionStatement",
																	"src": "2888:21:0"
																}
															},
															"id": 209,
															"nodeType": "IfStatement",
															"src": "2767:751:0",
															"trueBody": {
																"expression": {
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 117,
																			"name": "imp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 96,
																			"src": "2807:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																				"typeString": "struct Implementors.Implementor storage pointer"
																			}
																		},
																		"id": 119,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "2811:11:0",
																		"memberName": "epochReward",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "2807:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "323030",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2825:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	"src": "2807:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 122,
																"nodeType": "ExpressionStatement",
																"src": "2807:21:0"
															}
														},
														{
															"expression": {
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3535:21:0",
																"subExpression": {
																	"expression": {
																		"id": 210,
																		"name": "imp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3542:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																			"typeString": "struct Implementors.Implementor storage pointer"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3546:10:0",
																	"memberName": "epochSales",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 23,
																	"src": "3542:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 213,
															"nodeType": "ExpressionStatement",
															"src": "3535:21:0"
														},
														{
															"expression": {
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 214,
																		"name": "imp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3571:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																			"typeString": "struct Implementors.Implementor storage pointer"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3575:8:0",
																	"memberName": "epochEnd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 25,
																	"src": "3571:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 219,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3593:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3599:9:0",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3593:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "3135",
																				"id": 221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3611:7:0",
																				"subdenomination": "days",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1296000_by_1",
																					"typeString": "int_const 1296000"
																				},
																				"value": "15"
																			},
																			"src": "3593:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3586:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 217,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "3586:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3586:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "3571:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 225,
															"nodeType": "ExpressionStatement",
															"src": "3571:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 228,
															"name": "imp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "3643:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																"typeString": "struct Implementors.Implementor storage pointer"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3647:10:0",
														"memberName": "epochSales",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "3643:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3661:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3643:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "3643:19:0"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 234,
																"name": "imp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3682:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Implementor_$28_storage_ptr",
																	"typeString": "struct Implementors.Implementor storage pointer"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3686:11:0",
															"memberName": "epochReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "3682:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 236,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3681:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 81,
												"id": 237,
												"nodeType": "Return",
												"src": "3675:23:0"
											}
										]
									},
									"functionSelector": "6452c22d",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetEpochReward",
									"nameLocation": "2408:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "_implementor",
												"nameLocation": "2431:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2423:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2460:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 79,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2460:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:7:0"
									},
									"scope": 248,
									"src": "2399:1307:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "3834:2:0",
										"statements": []
									},
									"id": 243,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3815:2:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3834:0:0"
									},
									"scope": 248,
									"src": "3808:28:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "3869:2:0",
										"statements": []
									},
									"id": 247,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3850:2:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3869:0:0"
									},
									"scope": 248,
									"src": "3842:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 249,
							"src": "176:3698:0",
							"usedErrors": []
						}
					],
					"src": "34:3840:0"
				},
				"id": 0
			}
		}
	}
}